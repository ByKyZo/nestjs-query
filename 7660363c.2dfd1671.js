/*! For license information please see 7660363c.2dfd1671.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{187:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return m}));var a=n(2),o=n(9),i=(n(0),n(259)),r=n(263),l=n(262),s={title:"Relations"},b={id:"graphql/relations",title:"Relations",description:"When using the nestjs-query you can specify relations that should be exposed for the DTO using the following decorators.",source:"@site/docs/graphql/relations.mdx",permalink:"/nestjs-query/docs/graphql/relations",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/relations.mdx",sidebar:"docs",previous:{title:"Subscriptions",permalink:"/nestjs-query/docs/graphql/subscriptions"},next:{title:"Types",permalink:"/nestjs-query/docs/graphql/types"}},c=[{value:"@Relation Decorator",id:"relation-decorator",children:[{value:"Single Relation",id:"single-relation",children:[]},{value:"Many Relation",id:"many-relation",children:[]}]},{value:"@Connection Decorator",id:"connection-decorator",children:[{value:"DTO Definition",id:"dto-definition-1",children:[]},{value:"Resolver",id:"resolver-2",children:[]}]},{value:"Options",id:"options",children:[{value:"Custom Relation Name",id:"custom-relation-name",children:[]},{value:"Disable Reads",id:"disable-reads",children:[]},{value:"Disable Updates",id:"disable-updates",children:[]},{value:"Disable Removes",id:"disable-removes",children:[]},{value:"Guards, Pipes and Filters",id:"guards-pipes-and-filters",children:[]}]},{value:"Advanced",id:"advanced",children:[{value:"Manual Relation Definition",id:"manual-relation-definition",children:[]},{value:"Relation Mixin",id:"relation-mixin",children:[]}]}],d={rightToc:c};function m(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"When using the ",Object(i.b)("inlineCode",{parentName:"p"},"nestjs-query")," you can specify relations that should be exposed for the DTO using the following decorators."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"@Relation")," - A relation that is:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"a single value (one-to-one, many-to-one)"),Object(i.b)("li",{parentName:"ul"},"an array of values that should use ",Object(i.b)("inlineCode",{parentName:"li"},"OFFSET")," based paging."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"@Connection")," - A connection that represents a collection that should use ",Object(i.b)("inlineCode",{parentName:"li"},"cursor")," based pagination. (e.g, many-to-many, one-to-many)")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"When loading relations a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/graphql/dataloader"}),"dataloader")," that is scoped to the request will be used. This prevents the n+1 problem."))),Object(i.b)("p",null,"In the following examples we are going to use the following entities."),Object(i.b)(r.a,{defaultValue:"todoitementity",values:[{label:"TodoItemEntity",value:"todoitementity"},{label:"SubTaskEntity",value:"subtaskentity"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"todoitementity",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.entity.ts"',title:'"todo-item/todo-item.entity.ts"'}),"import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn, OneToMany } from 'typeorm';\nimport { SubTaskEntity } from '../sub-task/sub-task.entity';\n\n@Entity()\nexport class TodoItemEntity {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column()\n  title!: string;\n\n  @Column()\n  completed!: boolean;\n\n  @OneToMany(\n    () => SubTaskEntity,\n    subTask => subTask.todoItem,\n  )\n  subTasks!: SubTaskEntity[];\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n}\n\n"))),Object(i.b)(l.a,{value:"subtaskentity",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="sub-task/sub-task.entity.ts"',title:'"sub-task/sub-task.entity.ts"'}),"import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ObjectType,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { TodoItemEntity } from '../todo-item/todo-item.entity';\n\n@Entity()\nexport class SubTaskEntity {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column()\n  title!: string;\n\n  @Column()\n  completed!: boolean;\n\n  @Column({ nullable: false })\n  todoItemId!: string;\n\n  @ManyToOne(\n    (): ObjectType<TodoItemEntity> => TodoItemEntity,\n    td => td.subTasks,\n    { onDelete: 'CASCADE', nullable: false },\n  )\n  @JoinColumn()\n  todoItem!: TodoItemEntity;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n}\n\n")))),Object(i.b)("h2",{id:"relation-decorator"},"@Relation Decorator"),Object(i.b)("h3",{id:"single-relation"},"Single Relation"),Object(i.b)("h4",{id:"dto-definition"},"DTO Definition"),Object(i.b)("p",null,"Based on the entities defined above we can add a ",Object(i.b)("inlineCode",{parentName:"p"},"todoItem")," relation to the ",Object(i.b)("inlineCode",{parentName:"p"},"SubTask")," by creating the following ",Object(i.b)("inlineCode",{parentName:"p"},"SubTaskDTO")," with a ",Object(i.b)("inlineCode",{parentName:"p"},"@Relation")," decorator."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="sub-task/sub-task.dto.ts" {6}',title:'"sub-task/sub-task.dto.ts"',"{6}":!0}),"import { FilterableField, Relation } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { TodoItemDTO } from '../todo-item/todo-item.dto.ts';\n\n@ObjectType('SubTask')\n@Relation('todoItem', () => TodoItemDTO, { disableRemove: true })\nexport class SubTaskDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n\n  @FilterableField()\n  todoItemId!: string;\n}\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"@Relation")," decorator lets ",Object(i.b)("inlineCode",{parentName:"p"},"nestjs-query")," know to expose the following endpoints:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"subTask.todoItem")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"query")," to retrieve the ",Object(i.b)("inlineCode",{parentName:"li"},"SubTasks")," ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItem")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"setTodoItemOnSubTask")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"mutation")," to set the ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItem")," on a ",Object(i.b)("inlineCode",{parentName:"li"},"SubTask"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"removeTodoItemFromSubTask")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"mutation")," to remove a ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItem"),"/",Object(i.b)("inlineCode",{parentName:"li"},"SubTask")," relation.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"NOTE")," This does not typically remove either record just removes the relation.")))),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"In this example we ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove"),", because ",Object(i.b)("inlineCode",{parentName:"p"},"todoItem")," is not nullable, by specifying the ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," option."))),Object(i.b)("h4",{id:"resolver"},"Resolver"),Object(i.b)("p",null,"To set up the resolver you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="sub-task/sub-task.module.ts"',title:'"sub-task/sub-task.module.ts"'}),"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { SubTaskDTO } from './sub-task.dto';\nimport { SubTaskEntity } from './sub-task.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([SubTaskEntity])],\n      resolvers: [{ DTOClass: SubTaskDTO, EntityClass: SubTaskEntity }],\n    }),\n  ],\n})\nexport class SubTaskModule {}\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"@nestjs-query/query-graphql")," will then automatically create the following graphql definition:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type SubTask {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  todoItemId: String!\n  todoItem: TodoItem!\n}\n")),Object(i.b)("p",null,"The following mutations will also be automatically exposed."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n  setTodoItemOnSubTask(input: RelationInput!): SubTask!\n}\n\ninput RelationInput {\n  id: ID!\n  relationId: ID!\n}\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(i.b)("inlineCode",{parentName:"p"},"removeTodoItemFromSubTask")," mutation would also be exposed with the same arguments as ",Object(i.b)("inlineCode",{parentName:"p"},"setTodoItemOnSubTask"),"."))),Object(i.b)("h3",{id:"many-relation"},"Many Relation"),Object(i.b)("p",null,"You can also use the ",Object(i.b)("inlineCode",{parentName:"p"},"@Relation")," decorator to define a relation that returns an array of values."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The preferred method for adding a relation that represents multiple records is to use the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#connection-decorator"}),"@Connection decorator")))),Object(i.b)("p",null,"Based on the entity definition above we can define a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItemDTO")," with a ",Object(i.b)("inlineCode",{parentName:"p"},"subTasks")," relation."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0}),"import { FilterableField, Connection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@Relation('subTasks', () => [SubTaskDTO], { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(i.b)("p",null,"Notce how the relation is defined as ",Object(i.b)("inlineCode",{parentName:"p"},"[SubTaskDTO]")," this lets ",Object(i.b)("inlineCode",{parentName:"p"},"nestjs-query")," know that it should return an array of ",Object(i.b)("inlineCode",{parentName:"p"},"subTasks")),Object(i.b)("p",null,"When specifying a many relation a couple of endpoints will automatically be generated. In this example the following are generated."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"todoItem.subTasks")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"query")," to retrieve a ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItems")," ",Object(i.b)("inlineCode",{parentName:"li"},"SubTasks"),".",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"subTasks")," property will accept a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/nestjs-query/docs/concepts/queries"}),"query")," to allow you to filter, page and sort results."),Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"subTasks")," will be returned as an array of results."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"addSubTasksToTodoItem")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"mutation")," to add ",Object(i.b)("inlineCode",{parentName:"li"},"SubTasks")," to a ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItem"),".")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"In this example we ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," because ",Object(i.b)("inlineCode",{parentName:"p"},"SubTasks")," cannot exist without a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItem"),"."))),Object(i.b)("h4",{id:"resolver-1"},"Resolver"),Object(i.b)("p",null,"To set up the resolver you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'}),"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(i.b)("p",null,"The generated schema will contain a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItem")," type like the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: LimitOffsetPaging = { limit: 10 }\n    filter: SubTaskFilter = {}\n    sorting: [SubTaskSort!] = []\n  ): [SubTask!]!\n}\n")),Object(i.b)("p",null,"The following mutations will also be automatically exposed."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n   addSubTasksToTodoItem(input: RelationsInput!): TodoItem!\n}\n\ninput RelationsInput {\n  id: ID!\n  relationIds: [ID!]!\n}\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(i.b)("inlineCode",{parentName:"p"},"removeSubTasksFromTodoItem")," mutation would also be exposed with the same arguments as ",Object(i.b)("inlineCode",{parentName:"p"},"addSubTasksToTodoItem"),"."))),Object(i.b)("h2",{id:"connection-decorator"},"@Connection Decorator"),Object(i.b)("h3",{id:"dto-definition-1"},"DTO Definition"),Object(i.b)("p",null,"Based on the entity definitions above we can create a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItemDTO")," with a connection to the ",Object(i.b)("inlineCode",{parentName:"p"},"subTasks"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0}),"import { FilterableField, Connection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@Connection('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(i.b)("p",null,"When specifying a connection relation a couple of endpoints will automatically be generated. In this example the following are generated."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"todoItem.subTasks")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"query")," to retrieve a ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItems")," ",Object(i.b)("inlineCode",{parentName:"li"},"SubTasks"),".",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"subTasks")," property will accept a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/nestjs-query/docs/concepts/queries"}),"query")," to allow you to filter, page and sort results."),Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("inlineCode",{parentName:"li"},"subTasks")," property will return a ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/nestjs-query/docs/graphql/types#connectiontype"}),"connection")," to page through results."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"addSubTasksToTodoItem")," - A ",Object(i.b)("inlineCode",{parentName:"li"},"mutation")," to add ",Object(i.b)("inlineCode",{parentName:"li"},"SubTasks")," to a ",Object(i.b)("inlineCode",{parentName:"li"},"TodoItem"),".")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"In this example we ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," because ",Object(i.b)("inlineCode",{parentName:"p"},"SubTasks")," cannot exist without a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItem"),"."))),Object(i.b)("h3",{id:"resolver-2"},"Resolver"),Object(i.b)("p",null,"To set up the resolver you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'}),"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(i.b)("p",null,"The generated schema will contain a ",Object(i.b)("inlineCode",{parentName:"p"},"TodoItem")," type like the following."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: CursorPaging = { first: 10 }\n\n    filter: SubTaskFilter = {}\n\n    sorting: [SubTaskSort!] = []\n  ): SubTaskConnection!\n}\n")),Object(i.b)("p",null,"The following mutations will also be automatically exposed."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n   addSubTasksToTodoItem(input: RelationsInput!): TodoItem!\n}\n\ninput RelationsInput {\n  id: ID!\n  relationIds: [ID!]!\n}\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"If ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(i.b)("inlineCode",{parentName:"p"},"removeSubTasksFromTodoItem")," mutation would also be exposed with the same arguments as ",Object(i.b)("inlineCode",{parentName:"p"},"addSubTasksToTodoItem"),"."))),Object(i.b)("h2",{id:"options"},"Options"),Object(i.b)("p",null,"The following options can be passed to the ",Object(i.b)("inlineCode",{parentName:"p"},"@Relation")," or ",Object(i.b)("inlineCode",{parentName:"p"},"@Connection")," decorators, to customize functionality."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"relationName")," - The name of the relation to use when looking up the relation from the ",Object(i.b)("inlineCode",{parentName:"li"},"QueryService")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"nullable")," - Set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," if the relation is nullable."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableRead")," -  Set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," to disable read operations."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableUpdate")," -  Set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," to disable update operations."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"disableRemove")," -  Set to ",Object(i.b)("inlineCode",{parentName:"li"},"true")," to disable remove operations."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"guards=[]")," - An array of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.nestjs.com/guards"}),"guards")," to add to ",Object(i.b)("inlineCode",{parentName:"li"},"update")," and ",Object(i.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"interceptors=[]")," - An array of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.nestjs.com/interceptors"}),"interceptors")," to add to ",Object(i.b)("inlineCode",{parentName:"li"},"update")," and ",Object(i.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"pipes=[]")," - An array of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.nestjs.com/pipes"}),"pipes")," to add to ",Object(i.b)("inlineCode",{parentName:"li"},"update")," and ",Object(i.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"filters=[]")," - An array of ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.nestjs.com/exception-filters"}),"filters")," to add to ",Object(i.b)("inlineCode",{parentName:"li"},"update")," and ",Object(i.b)("inlineCode",{parentName:"li"},"remove")," endpoints.")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},Object(i.b)("inlineCode",{parentName:"p"},"guards"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interceptors")," and ",Object(i.b)("inlineCode",{parentName:"p"},"filters")," will not work by default with relation endpoints. See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.nestjs.com/graphql/tooling#execute-enhancers-at-the-field-resolver-level"}),"https://docs.nestjs.com/graphql/tooling#execute-enhancers-at-the-field-resolver-level")))),Object(i.b)("h3",{id:"custom-relation-name"},"Custom Relation Name"),Object(i.b)("p",null,"Sometimes you may want to expose a relation that has a different name when persisted from the graphql property. To do this use the ",Object(i.b)("inlineCode",{parentName:"p"},"relationName")," property."),Object(i.b)(r.a,{defaultValue:"relation",values:[{label:"Relation",value:"relation"},{label:"Connection",value:"connection"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// expose todoItem as todoItemRelation in graphql\n@Relation('todoItemRelation', () => TodoItemDTO, { relationName: 'todoItem' })\n"))),Object(i.b)(l.a,{value:"connection",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// expose subTasks as subTaskConnection in graphql\n@Connection('subTaskConnection', () => SubTaskDTO, { relationName: 'subTasks' })\n")))),Object(i.b)("h3",{id:"disable-reads"},"Disable Reads"),Object(i.b)("p",null,"To disable the ",Object(i.b)("inlineCode",{parentName:"p"},"read")," ",Object(i.b)("inlineCode",{parentName:"p"},"queries")," you can set the ",Object(i.b)("inlineCode",{parentName:"p"},"disableRead")," option to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"."),Object(i.b)(r.a,{defaultValue:"relation",values:[{label:"Relation",value:"relation"},{label:"Connection",value:"connection"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable reading the todoItem relation\n@Relation('todoItem', () => TodoItemDTO, { disableRead: true })\n"))),Object(i.b)(l.a,{value:"connection",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable reading the connection\n@Connection('subTasks', () => SubTaskDTO, { relationName: true })\n")))),Object(i.b)("h3",{id:"disable-updates"},"Disable Updates"),Object(i.b)("p",null,"To disable the ",Object(i.b)("inlineCode",{parentName:"p"},"update")," ",Object(i.b)("inlineCode",{parentName:"p"},"mutations")," you can set the ",Object(i.b)("inlineCode",{parentName:"p"},"disableUpdate")," option to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"."),Object(i.b)(r.a,{defaultValue:"relation",values:[{label:"Relation",value:"relation"},{label:"Connection",value:"connection"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable updates to the relation\n@Relation('todoItem', () => TodoItemDTO, { disableUpdate: true })\n"))),Object(i.b)(l.a,{value:"connection",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable adding subTasks to the connection\n@Connection('subTasks', () => SubTaskDTO, { disableUpdate: true })\n")))),Object(i.b)("h3",{id:"disable-removes"},"Disable Removes"),Object(i.b)("p",null,"To disable the ",Object(i.b)("inlineCode",{parentName:"p"},"remove")," ",Object(i.b)("inlineCode",{parentName:"p"},"mutations")," you can set the ",Object(i.b)("inlineCode",{parentName:"p"},"disableRemove")," option to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"."),Object(i.b)(r.a,{defaultValue:"relation",values:[{label:"Relation",value:"relation"},{label:"Connection",value:"connection"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable removing the relation\n@Relation('todoItem', () => TodoItemDTO, { disableRemove: true })\n"))),Object(i.b)(l.a,{value:"connection",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable removing subTasks from the connection\n@Connection('subTasks', () => SubTaskDTO, { disableRemove: true })\n")))),Object(i.b)("h3",{id:"guards-pipes-and-filters"},"Guards, Pipes and Filters"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"NOTE")," ",Object(i.b)("inlineCode",{parentName:"p"},"guards"),", ",Object(i.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(i.b)("inlineCode",{parentName:"p"},"interceptors")," and ",Object(i.b)("inlineCode",{parentName:"p"},"filters")," will not work by default with ",Object(i.b)("inlineCode",{parentName:"p"},"read")," endpoints. See ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/nestjs/graphql/issues/295"}),"https://github.com/nestjs/graphql/issues/295")),Object(i.b)("p",null,"In this example we'll just demonstrate using a ",Object(i.b)("inlineCode",{parentName:"p"},"guard")," but the same pattern applies for ",Object(i.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(i.b)("inlineCode",{parentName:"p"},"filters")," and\n",Object(i.b)("inlineCode",{parentName:"p"},"interceptors")),Object(i.b)("p",null,"To set up a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.nestjs.com/guards"}),"guard")," for endpoint you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"guards")," option."),Object(i.b)("p",null,"Assume we have the following auth guard that checks for a certain header and value."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="auth.guard.ts"',title:'"auth.guard.ts"'}),"import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AUTH_HEADER_NAME } from './constants';\nimport { config } from './config';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private logger = new Logger(AuthGuard.name);\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const ctx = GqlExecutionContext.create(context);\n    const req = ctx.getContext().request;\n    this.logger.log(`Req = ${req.headers}`);\n    return req.headers[AUTH_HEADER_NAME] === config.auth.header;\n  }\n}\n")),Object(i.b)("p",null,"We can then add it to our relations"),Object(i.b)(r.a,{defaultValue:"relation",values:[{label:"Relation",value:"relation"},{label:"Connection",value:"connection"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable removing the relation\n@Relation('todoItem', () => TodoItemDTO, { guards: [AuthGuard] })\n"))),Object(i.b)(l.a,{value:"connection",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"// disable removing subTasks from the connection\n@Connection('subTasks', () => SubTaskDTO, { guards: [AuthGuard] })\n")))),Object(i.b)("p",null,"Now any requests that go to the ",Object(i.b)("inlineCode",{parentName:"p"},"update")," or ",Object(i.b)("inlineCode",{parentName:"p"},"remove")," endpoints will require the guard."),Object(i.b)("h2",{id:"advanced"},"Advanced"),Object(i.b)("h3",{id:"manual-relation-definition"},"Manual Relation Definition"),Object(i.b)("p",null,"You also have the option to use the legacy way of defining relations in your resolver directly"),Object(i.b)("p",null,"Instead of decorating your DTO with ",Object(i.b)("inlineCode",{parentName:"p"},"Relation")," or ",Object(i.b)("inlineCode",{parentName:"p"},"Connection")," you can pass them in as options to your resolver."),Object(i.b)(r.a,{defaultValue:"todoitem",values:[{label:"TodoItemResolver",value:"todoitem"},{label:"SubTaskResolver",value:"subtask"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"todoitem",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.resolver.ts" {9-11}',title:'"todo-item/todo-item.resolver.ts"',"{9-11}":!0}),"import { CRUDResolver } from '@nestjs-query/query-graphql';\nimport { Resolver } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/dto/sub-task.dto';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemService } from './todo-item.service';\n\n@Resolver(() => TodoItemDTO)\nexport class TodoItemResolver extends CRUDResolver(TodoItemDTO, {\n  relations: {\n    many: { subTasks: { DTO: SubTaskDTO, disableRemove: true } },\n  },\n}) {\n  constructor(readonly service: TodoItemService) {\n    super(service);\n  }\n}\n"))),Object(i.b)(l.a,{value:"subtask",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="sub-task/sub-task.resolver.ts" {9-11}',title:'"sub-task/sub-task.resolver.ts"',"{9-11}":!0}),"import { CRUDResolver } from '@nestjs-query/query-graphql';\nimport { Resolver } from '@nestjs/graphql';\nimport { TodoItemDTO } from '../todo-item/dto/todo-item.dto';\nimport { SubTaskDTO } from './sub-task.dto';\nimport { SubTaskService } from './sub-task.service';\n\n@Resolver(() => SubTaskDTO)\nexport class SubTaskResolver extends CRUDResolver(SubTaskDTO, {\n  relations: {\n    one: { todoItem: { DTO: TodoItemDTO, disableRemove: true } },\n  },\n}) {\n  constructor(readonly service: SubTaskService) {\n    super(service);\n  }\n}\n")))),Object(i.b)("p",null,"You can also specify the ",Object(i.b)("inlineCode",{parentName:"p"},"pagingStrategy")," option to change the default paging behavior for a single relation."),Object(i.b)("p",null,"In this example we'll disable connections and cursor based paging in favor of an ",Object(i.b)("inlineCode",{parentName:"p"},"OFFSET")," based strategy that returns an array of values."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.resolver.ts" {9-11}',title:'"todo-item/todo-item.resolver.ts"',"{9-11}":!0}),"import { CRUDResolver, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { Resolver } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/dto/sub-task.dto';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemService } from './todo-item.service';\n\n@Resolver(() => TodoItemDTO)\nexport class TodoItemResolver extends CRUDResolver(TodoItemDTO, {\n  relations: {\n    many: { subTasks: { DTO: SubTaskDTO, pagingStrategy: PagingStrategies.OFFSET, disableRemove: true } },\n  },\n}) {\n  constructor(readonly service: TodoItemService) {\n    super(service);\n  }\n}\n")),Object(i.b)("h3",{id:"relation-mixin"},"Relation Mixin"),Object(i.b)("p",null,"If you are using the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"./resolvers#individual-resolvers"}),"resolvers individually")," you can use the following mixins to add relations functionality."),Object(i.b)("h4",{id:"relatable"},"Relatable"),Object(i.b)("p",null,"When using The ",Object(i.b)("inlineCode",{parentName:"p"},"Relatable")," mixin adds all relations functionality to a resolver."),Object(i.b)("p",null,"In this example we expose on read endpoints for todo items with a readable subtasks realtion."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item/todo-item.resolver.ts" {12-14}',title:'"todo-item/todo-item.resolver.ts"',"{12-14}":!0}),"import { ReadResolver, Relatable } from '@nestjs-query/query-graphql';\nimport { Resolver } from '@nestjs/graphql';\nimport { AuthGuard } from '../auth.guard';\nimport { SubTaskDTO } from '../sub-task/dto/sub-task.dto';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemService } from './todo-item.service';\n\nconst guards = [AuthGuard];\n\n@Resolver(() => TodoItemDTO)\nexport class TodoItemResolver extends Relatable(TodoItemDTO, {\n  many: {\n    subTasks: { DTO: SubTaskDTO, disableRemove: true, disableUpdate: true },\n  },\n})(ReadResolver(TodoItemDTO)) {\n  constructor(readonly service: TodoItemService) {\n    super(service);\n  }\n}\n")))}m.isMDXComponent=!0},259:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),c=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=a,u=d["".concat(r,".").concat(p)]||d[p]||m[p]||i;return n?o.a.createElement(u,l(l({ref:t},b),{},{components:n})):o.a.createElement(u,l({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var b=2;b<i;b++)r[b]=n[b];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},260:function(e,t,n){var a;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var a=arguments[t];if(a){var i=typeof a;if("string"===i||"number"===i)e.push(a);else if(Array.isArray(a)&&a.length){var r=o.apply(null,a);r&&e.push(r)}else if("object"===i)for(var l in a)n.call(a,l)&&a[l]&&e.push(l)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(a=function(){return o}.apply(t,[]))||(e.exports=a)}()},261:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});t.a=o},262:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function(e){return o.a.createElement("div",null,e.children)}},263:function(e,t,n){"use strict";n(23),n(18),n(17);var a=n(0),o=n.n(a),i=n(261);var r=function(){return Object(a.useContext)(i.a)},l=n(260),s=n.n(l),b=n(126),c=n.n(b),d=37,m=39;t.a=function(e){var t=e.block,n=e.children,i=e.defaultValue,l=e.values,b=e.groupId,p=r(),u=p.tabGroupChoices,O=p.setTabGroupChoices,j=Object(a.useState)(i),h=j[0],v=j[1];if(null!=b){var N=u[b];null!=N&&N!==h&&v(N)}var T=function(e){v(e),null!=b&&O(b,e)},g=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:s()("tabs",{"tabs--block":t})},l.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":h===t,className:s()("tabs__item",c.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return g.push(e)},onKeyDown:function(e){return function(e,t,n){switch(n.keyCode){case m:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case d:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(g,e.target,e)},onFocus:function(){return T(t)},onClick:function(){return T(t)}},n)}))),o.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===h}))[0]))}}}]);