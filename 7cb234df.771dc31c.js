(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{161:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return b}));var a=t(2),l=t(6),r=(t(0),t(227)),o=t(231),d=t(232),s={title:"Queries"},c={id:"graphql/queries",isDocsHomePage:!1,title:"Queries",description:"The CRUDResolver automatically exposes two query endpoints. The endpoints names will be derived from",source:"@site/docs/graphql/queries.mdx",permalink:"/nestjs-query/docs/graphql/queries",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/queries.mdx",sidebar:"docs",previous:{title:"Resolvers",permalink:"/nestjs-query/docs/graphql/resolvers"},next:{title:"Mutations",permalink:"/nestjs-query/docs/graphql/mutations"}},i=[{value:"Find By Id",id:"find-by-id",children:[]},{value:"Cursor Based Querying",id:"cursor-based-querying",children:[{value:"Filtering",id:"filtering",children:[]},{value:"Paging",id:"paging",children:[]},{value:"Sorting",id:"sorting",children:[]}]},{value:"Offset Based Querying",id:"offset-based-querying",children:[{value:"Filtering",id:"filtering-1",children:[]},{value:"Paging",id:"paging-1",children:[]},{value:"Sorting",id:"sorting-1",children:[]}]},{value:"No Paging Based Querying",id:"no-paging-based-querying",children:[{value:"Filtering",id:"filtering-2",children:[]},{value:"Sorting",id:"sorting-2",children:[]}]}],p={rightToc:i};function b(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/nestjs-query/docs/graphql/resolvers"}),"CRUDResolver")," automatically exposes two query endpoints. The endpoints names will be derived from\nname provided to ",Object(r.b)("inlineCode",{parentName:"p"},"@ObjectType")," or the class name."),Object(r.b)("p",null,"The following examples are based on the following ",Object(r.b)("inlineCode",{parentName:"p"},"TodoItemDTO")),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'}),"import { FilterableField } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(r.b)("p",null,"In the following examples you will see two endpoints referenced"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"todoItem")," - graphql endpoint to find a record by id."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"todoItems")," - graphql endpoint to filter, page, and sort records,")),Object(r.b)("h2",{id:"find-by-id"},"Find By Id"),Object(r.b)("p",null,"The following example finds a ",Object(r.b)("inlineCode",{parentName:"p"},"TodoItem")," by id."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),'{\n  todoItem(id: "1") {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n'))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": false,\n      "created": "2020-01-14T07:00:31.763Z",\n      "updated": "2020-01-14T07:00:31.763Z"\n    }\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h2",{id:"cursor-based-querying"},"Cursor Based Querying"),Object(r.b)("p",null,"As described above the ",Object(r.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will expose a query method called ",Object(r.b)("inlineCode",{parentName:"p"},"todoItems"),". The result will be a\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://relay.dev/graphql/connections.htm"}),Object(r.b)("inlineCode",{parentName:"a"},"connection"))," that you can use to page through results."),Object(r.b)("p",null,"By default if you do not provided an arguments you can query for all records."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems{\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges{\n      node{\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjI="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-01T00:43:16.000Z",\n            "updated": "2020-01-01T00:43:16.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-01T00:49:01.000Z",\n            "updated": "2020-01-01T00:49:01.000Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"filtering"},"Filtering"),Object(r.b)("p",null,"Filtering in ",Object(r.b)("inlineCode",{parentName:"p"},"query-graphql")," has has an object based syntax"),Object(r.b)("p",null,"For a full reference of filter operations ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../concepts/queries#filter-reference"}),"see filter reference")),Object(r.b)("p",null,"The following example filters for all todoItems that are marked completed."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(filter: {completed: {is: true}}){\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges{\n      node{\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjE="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"paging"},"Paging"),Object(r.b)("p",null,"In this example we'll fetch the first 2 records."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(paging: {first: 2}) {\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges{\n      node{\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": true,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjE="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("p",null,"Lets take a look the ",Object(r.b)("inlineCode",{parentName:"p"},"pageInfo")," from the previous example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "pageInfo": {\n    "hasNextPage": true,\n    "hasPreviousPage": false,\n    "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n    "endCursor": "YXJyYXljb25uZWN0aW9uOjE="\n  },\n}\n')),Object(r.b)("p",null,"Notice how ",Object(r.b)("inlineCode",{parentName:"p"},"hasNextPage")," is ",Object(r.b)("inlineCode",{parentName:"p"},"true")," and there is an ",Object(r.b)("inlineCode",{parentName:"p"},"endCursor")," we can use that to fetch the next page."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),'{\n  todoItems(paging: { after: "YXJyYXljb25uZWN0aW9uOjE=", first: 2 }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n'))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": true,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjI=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjM="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Create Many Todo Items - 3",\n            "completed": false,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjM="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("p",null,"We cal also page backward by using ",Object(r.b)("inlineCode",{parentName:"p"},"before")," and ",Object(r.b)("inlineCode",{parentName:"p"},"last"),". In the following example we'll use the ",Object(r.b)("inlineCode",{parentName:"p"},"startCursor")," from the\nprevious example and set ",Object(r.b)("inlineCode",{parentName:"p"},"last")," to 2."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),'{\n  todoItems(paging: { before: "YXJyYXljb25uZWN0aW9uOjI=", last: 2 }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n'))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjE="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"sorting"},"Sorting"),Object(r.b)("p",null,"You can sort by one or more fields by using the ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter is an array where each item has the following options."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"field!")," - The name of the field to sort by."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"direction!")," - The direction to sort either ",Object(r.b)("inlineCode",{parentName:"li"},"ASC")," or ",Object(r.b)("inlineCode",{parentName:"li"},"DESC"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"nulls?")," - Optional field to set nulls sort order ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_FIRST")," or ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_last"))),Object(r.b)("p",null,"In this example we sort by title descending."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(sorting: [{ field: title, direction: DESC }]) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjQ="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Create Many Todo Items - 3",\n            "completed": false,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjM="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjQ="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("p",null,"In this example we sort by completed and title."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(\n    sorting: [\n      { field: completed, direction: ASC }\n      { field: title, direction: DESC }\n    ]\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        completed\n        created\n        updated\n      }\n      cursor\n    }\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": {\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjQ="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create One Todo Item",\n            "completed": false,\n            "created": "2020-01-14T07:00:31.763Z",\n            "updated": "2020-01-14T07:00:31.763Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjA="\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Create Many Todo Items - 3",\n            "completed": false,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjE="\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Many Todo Items - 1",\n            "completed": false,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjI="\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "Create Many Todo Items - 4",\n            "completed": true,\n            "created": "2020-01-14T07:01:27.805Z",\n            "updated": "2020-01-14T07:01:27.805Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjM="\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Many Todo Items - 2",\n            "completed": true,\n            "created": "2020-01-14T07:00:34.111Z",\n            "updated": "2020-01-14T07:00:34.111Z"\n          },\n          "cursor": "YXJyYXljb25uZWN0aW9uOjQ="\n        }\n      ]\n    }\n  }\n}\n')))),Object(r.b)("h2",{id:"offset-based-querying"},"Offset Based Querying"),Object(r.b)("p",null,"An alternative to cursor based querying is to use the ",Object(r.b)("inlineCode",{parentName:"p"},"OFFSET")," ",Object(r.b)("inlineCode",{parentName:"p"},"pagingStrategy")," described is the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/nestjs-query/docs/graphql/resolvers#options"}),"resolvers documentation")),Object(r.b)("p",null,"When using the strategy queries that return multiple records will return an ",Object(r.b)("inlineCode",{parentName:"p"},"ArrayConnection")," instead of a ",Object(r.b)("inlineCode",{parentName:"p"},"CursorConnection"),"."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"filtering-1"},"Filtering"),Object(r.b)("p",null,"Filtering in ",Object(r.b)("inlineCode",{parentName:"p"},"query-graphql")," has has an object based syntax"),Object(r.b)("p",null,"For a full reference of filter operations ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../concepts/queries#filter-reference"}),"see filter reference")),Object(r.b)("p",null,"The following example filters for all todoItems that are marked completed."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(filter: {completed: {is: true}}) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"paging-1"},"Paging"),Object(r.b)("p",null,"In this example we'll fetch the first 2 records."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(paging: {limit: 2}) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("p",null,"In this example we'll also pass in an offset to fetch the next 2 records."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(paging: {limit: 2, offset: 2}) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"sorting-1"},"Sorting"),Object(r.b)("p",null,"You can sort by one or more fields by using the ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter is an array where each item has the following options."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"field!")," - The name of the field to sort by."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"direction!")," - The direction to sort either ",Object(r.b)("inlineCode",{parentName:"li"},"ASC")," or ",Object(r.b)("inlineCode",{parentName:"li"},"DESC"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"nulls?")," - Optional field to set nulls sort order ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_FIRST")," or ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_last"))),Object(r.b)("p",null,"In this example we sort by title descending."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(sorting: [{ field: title, direction: DESC }]) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("p",null,"In this example we sort by completed and title."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(\n    sorting: [\n      { field: completed, direction: DESC }\n      { field: title, direction: DESC }\n    ]\n  ) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("h2",{id:"no-paging-based-querying"},"No Paging Based Querying"),Object(r.b)("p",null,"When using the ",Object(r.b)("inlineCode",{parentName:"p"},"NONE")," paging strategy the ",Object(r.b)("inlineCode",{parentName:"p"},"paging")," argument is removed and all methods will return an ",Object(r.b)("inlineCode",{parentName:"p"},"ArrayConnection"),"."),Object(r.b)("p",null,"When using the strategy queries that return multiple records will return an array instead of a connection."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      },\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:15:18.876Z",\n        "updated": "2020-06-12T08:15:18.876Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"filtering-2"},"Filtering"),Object(r.b)("p",null,"Filtering in ",Object(r.b)("inlineCode",{parentName:"p"},"query-graphql")," has has an object based syntax"),Object(r.b)("p",null,"For a full reference of filter operations ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"../concepts/queries#filter-reference"}),"see filter reference")),Object(r.b)("p",null,"The following example filters for all todoItems that are marked completed."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(filter: {completed: {is: true}}) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"sorting-2"},"Sorting"),Object(r.b)("p",null,"You can sort by one or more fields by using the ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"sorting")," parameter is an array where each item has the following options."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"field!")," - The name of the field to sort by."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"direction!")," - The direction to sort either ",Object(r.b)("inlineCode",{parentName:"li"},"ASC")," or ",Object(r.b)("inlineCode",{parentName:"li"},"DESC"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"nulls?")," - Optional field to set nulls sort order ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_FIRST")," or ",Object(r.b)("inlineCode",{parentName:"li"},"NULLS_last"))),Object(r.b)("p",null,"In this example we sort by title descending."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(sorting: [{ field: title, direction: DESC }]) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))),Object(r.b)("p",null,"In this example we sort by completed and title."),Object(r.b)(o.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(r.b)(d.a,{value:"graphql",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"{\n  todoItems(\n    sorting: [\n      { field: completed, direction: DESC }\n      { field: title, direction: DESC }\n    ]\n  ) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n\n"))),Object(r.b)(d.a,{value:"response",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "todoItems": [\n      {\n        "id": "1",\n        "title": "Create Nest App",\n        "completed": true,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "5",\n        "title": "How to create item With Sub Tasks",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Entity Service",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "2",\n        "title": "Create Entity",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      },\n      {\n        "id": "4",\n        "title": "Add Todo Item Resolver",\n        "completed": false,\n        "created": "2020-06-12T08:44:43.555Z",\n        "updated": "2020-06-12T08:44:43.555Z"\n      }\n    ]\n  }\n}\n')))))}b.isMDXComponent=!0},227:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),l=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function d(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=l.a.createContext({}),i=function(e){var n=l.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):d(d({},n),e)),t},p=function(e){var n=i(e.components);return l.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return l.a.createElement(l.a.Fragment,{},n)}},u=l.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=i(t),u=a,m=p["".concat(o,".").concat(u)]||p[u]||b[u]||r;return t?l.a.createElement(m,d(d({ref:n},c),{},{components:t})):l.a.createElement(m,d({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:a,o[1]=d;for(var c=2;c<r;c++)o[c]=t[c];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},228:function(e,n,t){"use strict";function a(e){var n,t,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(l&&(l+=" "),l+=t);else for(n in e)e[n]&&(l&&(l+=" "),l+=n);return l}n.a=function(){for(var e,n,t=0,l="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(l&&(l+=" "),l+=n);return l}},229:function(e,n,t){"use strict";var a=t(0);const l=Object(a.createContext)({tabGroupChoices:{},setTabGroupChoices:()=>{},isAnnouncementBarClosed:!1,closeAnnouncementBar:()=>{}});n.a=l},230:function(e,n,t){"use strict";var a=t(0),l=t(229);n.a=function(){return Object(a.useContext)(l.a)}},231:function(e,n,t){"use strict";var a=t(0),l=t.n(a),r=t(230),o=t(228),d=t(92),s=t.n(d);const c=37,i=39;n.a=function(e){const{block:n,children:t,defaultValue:d,values:p,groupId:b}=e,{tabGroupChoices:u,setTabGroupChoices:m}=Object(r.a)(),[j,O]=Object(a.useState)(d);if(null!=b){const e=u[b];null!=e&&e!==j&&p.some(n=>n.value===e)&&O(e)}const g=e=>{O(e),null!=b&&m(b,e)},h=[];return l.a.createElement("div",null,l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},p.map(({value:e,label:n})=>l.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":j===e,className:Object(o.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===e}),key:e,ref:e=>h.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case i:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case c:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(h,e.target,e),onFocus:()=>g(e),onClick:()=>g(e)},n))),l.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===j)[0]))}},232:function(e,n,t){"use strict";var a=t(0),l=t.n(a);n.a=function(e){return l.a.createElement("div",null,e.children)}}}]);