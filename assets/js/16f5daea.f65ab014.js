(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9972],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),s=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},5064:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var o=n(7294),r=n(9443);var i=function(){var e=(0,o.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},a=n(6010),l="tabItem_1uMI",u="tabItemActive_2DSg";var s=37,c=39;var d=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,d=e.values,p=e.groupId,m=e.className,f=i(),y=f.tabGroupChoices,g=f.setTabGroupChoices,v=(0,o.useState)(r),h=v[0],T=v[1],b=o.Children.toArray(e.children),O=[];if(null!=p){var x=y[p];null!=x&&x!==h&&d.some((function(e){return e.value===x}))&&T(x)}var k=function(e){var t=e.currentTarget,n=O.indexOf(t),o=d[n].value;T(o),null!=p&&(g(p,o),setTimeout((function(){var e,n,o,r,i,a,l,s;(e=t.getBoundingClientRect(),n=e.top,o=e.left,r=e.bottom,i=e.right,a=window,l=a.innerHeight,s=a.innerWidth,n>=0&&i<=s&&r<=l&&o>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(u),setTimeout((function(){return t.classList.remove(u)}),2e3))}),150))},C=function(e){var t,n;switch(e.keyCode){case c:var o=O.indexOf(e.target)+1;n=O[o]||O[0];break;case s:var r=O.indexOf(e.target)-1;n=O[r]||O[O.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},m)},d.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,className:(0,a.Z)("tabs__item",l,{"tabs__item--active":h===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:C,onFocus:k,onClick:k},n)}))),t?(0,o.cloneElement)(b.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},9443:function(e,t,n){"use strict";var o=(0,n(7294).createContext)(void 0);t.Z=o},6897:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var o=n(2122),r=n(9756),i=(n(7294),n(3905)),a=(n(5064),n(8215),["components"]),l={title:"v0.23.x to v0.24.x"},u=void 0,s={unversionedId:"migration-guides/v0.23.x-to-v0.24.x",id:"migration-guides/v0.23.x-to-v0.24.x",isDocsHomePage:!1,title:"v0.23.x to v0.24.x",description:"Removed Public ConnectionType and SortType function.",source:"@site/docs/migration-guides/v0.23.x-to-v0.24.x.mdx",sourceDirName:"migration-guides",slug:"/migration-guides/v0.23.x-to-v0.24.x",permalink:"/nestjs-query/docs/migration-guides/v0.23.x-to-v0.24.x",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/migration-guides/v0.23.x-to-v0.24.x.mdx",version:"current",frontMatter:{title:"v0.23.x to v0.24.x"},sidebar:"docs",previous:{title:"v0.24.x to v0.25.x",permalink:"/nestjs-query/docs/migration-guides/v0.24.x-to-v0.25.x"},next:{title:"v0.22.x to v0.23.x",permalink:"/nestjs-query/docs/migration-guides/v0.22.x-to-v0.23.x"}},c=[{value:"Removed Public ConnectionType and SortType function.",id:"removed-public-connectiontype-and-sorttype-function",children:[{value:"Old",id:"old",children:[]},{value:"New",id:"new",children:[]}]},{value:"<code>@QueryOptions</code> Decorator",id:"queryoptions-decorator",children:[{value:"Old",id:"old-1",children:[]},{value:"New",id:"new-1",children:[]}]}],d={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"removed-public-connectiontype-and-sorttype-function"},"Removed Public ConnectionType and SortType function."),(0,i.kt)("p",null,"In versions prior to ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.24.0")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"ConnectionType")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"SortType")," functions could be used to get a reference to a\n",(0,i.kt)("inlineCode",{parentName:"p"},"Connection")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Sort")," graphql implementation. In ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.24.0")," there public methods were removed in favor of pulling\nthem off of the ",(0,i.kt)("inlineCode",{parentName:"p"},"QueryArgs"),"."),(0,i.kt)("p",null,"This change was made to remove possibility of creating ConnectionTypes and SortTypes that are incompatible with the\nQueryArgsType."),(0,i.kt)("h3",{id:"old"},"Old"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { ConnectionType, SortType } from '@nestjs-query/query-graphql';\nimport { TodoItemDTO } from './dto/todo-item.dto';\n\nexport const TodoItemConnection = ConnectionType(TodoItemDTO);\nexport const TodoItemSort = SortType(TodoItemDTO);\n")),(0,i.kt)("h3",{id:"new"},"New"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { QueryArgsType } from '@nestjs-query/query-graphql';\nimport { TodoItemDTO } from './dto/todo-item.dto';\n\nexport const TodoItemQueryArgs = QueryArgsType(TodoItemDTO)\nexport const TodoItemConnection = TodoItemQueryArgs.ConnectionType;\nexport const TodoItemSort = TodoItemQueryArgs.SortType;\n")),(0,i.kt)("h2",{id:"queryoptions-decorator"},(0,i.kt)("inlineCode",{parentName:"h2"},"@QueryOptions")," Decorator"),(0,i.kt)("p",null,"In previous versions you had to specify options for querying and connections in your resolver. In ",(0,i.kt)("inlineCode",{parentName:"p"},"v0.24.0")," a new\n",(0,i.kt)("inlineCode",{parentName:"p"},"@QueryOptions")," decorator was  introduced to allow specifying all query related options along side the DTO, instead of splitting the configuration between the resolver and ",(0,i.kt)("inlineCode",{parentName:"p"},"DTO"),".  The new ",(0,i.kt)("inlineCode",{parentName:"p"},"@QueryOptions")," provides a few benefits."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Better re-use across types by avoiding passing configuration options all the way through the code to each piece that may need them."),(0,i.kt)("li",{parentName:"ul"},"Decoupling query options from the resolver. This puts us in a better position to decouple the DTO definition from the transport layer (e.g. graphql)"),(0,i.kt)("li",{parentName:"ul"},"Keeps DTO configuration options closer to the source.")),(0,i.kt)("h3",{id:"old-1"},"Old"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.module.ts"',title:'"todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{\n        DTOClass: TodoItemDTO,\n        EntityClass: TodoItemEntity,\n        pagingStrategy: PagingStrategies.OFFSET,\n        enableTotalCount: true,\n        defaultResultSize: 5,\n        maxResultSize: 100,\n        defaultFilter: { completed: { is: true } },\n        defaultSort: [{ field: 'title', direction: SortDirection.ASC }],\n      }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),(0,i.kt)("h3",{id:"new-1"},"New"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({\n  pagingStrategy: PagingStrategies.OFFSET, // use offset based paging for this DTO\n  enableTotalCount: true, // enable querying for totalCount\n  defaultResultSize: 5, // return 5 records by default\n  maxResultSize: 100, // do not allow querying for more than 100 records at a time\n  defaultFilter: { completed: { is: true } }, // default filter when one is not provided\n  defaultSort: [{ field: 'title', direction: SortDirection.ASC }], // default sort when one is not provided.\n})\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n")))}p.isMDXComponent=!0},6010:function(e,t,n){"use strict";function o(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);