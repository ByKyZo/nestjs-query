(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{128:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),o=(n(0),n(218)),i=n(222),l=n(223);const r={title:"Relations"},s={unversionedId:"graphql/relations",id:"graphql/relations",isDocsHomePage:!1,title:"Relations",description:"When using the nestjs-query you can specify relations that should be exposed for the DTO using the following decorators.",source:"@site/docs/graphql/relations.mdx",slug:"/graphql/relations",permalink:"/nestjs-query/docs/graphql/relations",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/relations.mdx",version:"current",sidebar:"docs",previous:{title:"Subscriptions",permalink:"/nestjs-query/docs/graphql/subscriptions"},next:{title:"Types",permalink:"/nestjs-query/docs/graphql/types"}},b=[{value:"@Relation",id:"relation",children:[{value:"Example",id:"example",children:[]}]},{value:"@FilterableRelation",id:"filterablerelation",children:[{value:"Example",id:"example-1",children:[]}]},{value:"@UnPagedRelation",id:"unpagedrelation",children:[{value:"Example",id:"example-2",children:[]}]},{value:"@FilterableUnPagedRelation",id:"filterableunpagedrelation",children:[{value:"Example",id:"example-3",children:[]}]},{value:"@OffsetConnection",id:"offsetconnection",children:[{value:"Example",id:"example-4",children:[]},{value:"Total Count Example",id:"total-count-example",children:[]}]},{value:"@FilterableOffsetConnection",id:"filterableoffsetconnection",children:[{value:"Example",id:"example-5",children:[]}]},{value:"@CursorConnection",id:"cursorconnection",children:[{value:"Example",id:"example-6",children:[]},{value:"Total Count Example",id:"total-count-example-1",children:[]}]},{value:"@FilterableCursorConnection",id:"filterablecursorconnection",children:[{value:"Example",id:"example-7",children:[]}]},{value:"Virtual Relations",id:"virtual-relations",children:[]},{value:"Options",id:"options",children:[{value:"Custom Relation Name",id:"custom-relation-name",children:[]},{value:"Disable Reads",id:"disable-reads",children:[]},{value:"Disable Updates",id:"disable-updates",children:[]},{value:"Disable Removes",id:"disable-removes",children:[]},{value:"Guards, Pipes and Filters",id:"guards-pipes-and-filters",children:[]},{value:"Relation Mixin",id:"relation-mixin",children:[]}]}],d={toc:b};function p({components:e,...t}){return Object(o.b)("wrapper",Object(a.a)({},d,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"When using the ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," you can specify relations that should be exposed for the DTO using the following decorators."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@Relation")," - A relation that is a single value (one-to-one, many-to-one)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@FilterableRelation")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"@Relation")," that enables filtering the parent by fields of the relation ",Object(o.b)("inlineCode",{parentName:"li"},"DTO"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@UnPagedRelation")," - An array of relations (e.g, many-to-many, one-to-many) that returns all of the related records."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@FilterableUnPagedRelation")," - An ",Object(o.b)("inlineCode",{parentName:"li"},"@UnPagedRelation")," that enables filtering the parent by fields of the relation\n",Object(o.b)("inlineCode",{parentName:"li"},"DTO"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@OffsetConnection")," - A connection that represents a collection (e.g, many-to-many, one-to-many) that uses ",Object(o.b)("inlineCode",{parentName:"li"},"offset"),"\nbased pagination."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@FilterableOffsetConnection")," - An ",Object(o.b)("inlineCode",{parentName:"li"},"@OffsetConnection")," that enables filtering the parent by fields of the connection\n",Object(o.b)("inlineCode",{parentName:"li"},"DTO"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@CursorConnection")," - A connection that represents a collection (e.g, many-to-many, one-to-many) that uses ",Object(o.b)("inlineCode",{parentName:"li"},"cursor"),"\nbased pagination."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@FilterableCursorConnection")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"@CursorConnection")," that enables filtering the parent by fields of the\nconnection ",Object(o.b)("inlineCode",{parentName:"li"},"DTO"),".")),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation"),", ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableOffsetConnection"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableCursorConnection")," are not supported by\nmongoose!"))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"When loading relations a ",Object(o.b)("a",{parentName:"p",href:"https://github.com/graphql/dataloader"},"dataloader")," that is scoped to the request will be used. This prevents the n+1 problem."))),Object(o.b)("p",null,"In the following examples we are going to use the following entities."),Object(o.b)(i.a,{defaultValue:"todoitementity",values:[{label:"TodoItemEntity",value:"todoitementity"},{label:"SubTaskEntity",value:"subtaskentity"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"todoitementity",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.entity.ts"',title:'"todo-item/todo-item.entity.ts"'},"import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn, OneToMany } from 'typeorm';\nimport { SubTaskEntity } from '../sub-task/sub-task.entity';\n\n@Entity()\nexport class TodoItemEntity {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column()\n  title!: string;\n\n  @Column()\n  completed!: boolean;\n\n  @OneToMany(\n    () => SubTaskEntity,\n    subTask => subTask.todoItem,\n  )\n  subTasks!: SubTaskEntity[];\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n}\n\n"))),Object(o.b)(l.a,{value:"subtaskentity",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.entity.ts"',title:'"sub-task/sub-task.entity.ts"'},"import {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ObjectType,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { TodoItemEntity } from '../todo-item/todo-item.entity';\n\n@Entity()\nexport class SubTaskEntity {\n  @PrimaryGeneratedColumn()\n  id!: string;\n\n  @Column()\n  title!: string;\n\n  @Column()\n  completed!: boolean;\n\n  @Column({ nullable: false })\n  todoItemId!: string;\n\n  @ManyToOne(\n    (): ObjectType<TodoItemEntity> => TodoItemEntity,\n    td => td.subTasks,\n    { onDelete: 'CASCADE', nullable: false },\n  )\n  @JoinColumn()\n  todoItem!: TodoItemEntity;\n\n  @CreateDateColumn()\n  created!: Date;\n\n  @UpdateDateColumn()\n  updated!: Date;\n}\n\n")))),Object(o.b)("h2",{id:"relation"},"@Relation"),Object(o.b)("p",null,"A relation that is a single value (one-to-one, many-to-one)"),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("p",null,"Based on the entities defined above we can add a ",Object(o.b)("inlineCode",{parentName:"p"},"todoItem")," relation to the ",Object(o.b)("inlineCode",{parentName:"p"},"SubTask")," by creating the following ",Object(o.b)("inlineCode",{parentName:"p"},"SubTaskDTO")," with a ",Object(o.b)("inlineCode",{parentName:"p"},"@Relation")," decorator."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.dto.ts" {6}',title:'"sub-task/sub-task.dto.ts"',"{6}":!0},"import { FilterableField, Relation } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { TodoItemDTO } from '../todo-item/todo-item.dto.ts';\n\n@ObjectType('SubTask')\n@Relation('todoItem', () => TodoItemDTO, { disableRemove: true })\nexport class SubTaskDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n\n  @FilterableField()\n  todoItemId!: string;\n}\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@Relation")," decorator lets ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," know to expose the following endpoints:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"subTask.todoItem")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"query")," to retrieve the ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks")," ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"setTodoItemOnSubTask")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"mutation")," to set the ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem")," on a ",Object(o.b)("inlineCode",{parentName:"li"},"SubTask"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"removeTodoItemFromSubTask")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"mutation")," to remove a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem"),"/",Object(o.b)("inlineCode",{parentName:"li"},"SubTask")," relation.",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"NOTE")," This does not typically remove either record just removes the relation.")))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"In this example we ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove"),", because ",Object(o.b)("inlineCode",{parentName:"p"},"todoItem")," is not nullable, by specifying the ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," option."))),Object(o.b)("p",null,"To set up the resolver you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.module.ts"',title:'"sub-task/sub-task.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { SubTaskDTO } from './sub-task.dto';\nimport { SubTaskEntity } from './sub-task.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([SubTaskEntity])],\n      resolvers: [{ DTOClass: SubTaskDTO, EntityClass: SubTaskEntity }],\n    }),\n  ],\n})\nexport class SubTaskModule {}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"@nestjs-query/query-graphql")," will then automatically create the following graphql definition:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type SubTask {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  todoItemId: String!\n  todoItem: TodoItem!\n}\n")),Object(o.b)("p",null,"The following mutations will also be automatically exposed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Mutation {\n  setTodoItemOnSubTask(input: RelationInput!): SubTask!\n}\n\ninput RelationInput {\n  id: ID!\n  relationId: ID!\n}\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(o.b)("inlineCode",{parentName:"p"},"removeTodoItemFromSubTask")," mutation would also be exposed with the same arguments as ",Object(o.b)("inlineCode",{parentName:"p"},"setTodoItemOnSubTask"),"."))),Object(o.b)("h2",{id:"filterablerelation"},"@FilterableRelation"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableRelation")," extends the ",Object(o.b)("inlineCode",{parentName:"p"},"@Relation")," decorator exposing the ability to filter the ",Object(o.b)("inlineCode",{parentName:"p"},"DTO")," that defines the relation by relation properties."),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableRelation")," decorator will ",Object(o.b)("strong",{parentName:"p"},"only")," work with relations defined by the orm used (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"typeorm"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"sequelize"),"). If your relations are federated or you are using ",Object(o.b)("inlineCode",{parentName:"p"},"mongoose")," you cannot use the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableRelation"),"\ndecorator."))),Object(o.b)("h3",{id:"example-1"},"Example"),Object(o.b)("p",null,"In this example we'll use the same Entities defined above to create a graphql endpoint that allows filtering ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks")," by ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.dto.ts" {6}',title:'"sub-task/sub-task.dto.ts"',"{6}":!0},"import { FilterableField, FilterableRelation } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { TodoItemDTO } from '../todo-item/todo-item.dto.ts';\n\n@ObjectType('SubTask')\n@FilterableRelation('todoItem', () => TodoItemDTO, { disableRemove: true })\nexport class SubTaskDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n\n  @FilterableField()\n  todoItemId!: string;\n}\n")),Object(o.b)("p",null,"Notice the use of ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableRelation")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"@Relation"),", by using the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableRelation")," version ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," will allow filtering on the ",Object(o.b)("inlineCode",{parentName:"p"},"todoItem")," relation."),Object(o.b)("p",null,"The  module definition remains the same."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.module.ts"',title:'"sub-task/sub-task.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { SubTaskDTO } from './sub-task.dto';\nimport { SubTaskEntity } from './sub-task.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([SubTaskEntity])],\n      resolvers: [{ DTOClass: SubTaskDTO, EntityClass: SubTaskEntity }],\n    }),\n  ],\n})\nexport class SubTaskModule {}\n")),Object(o.b)("p",null,"When querying for ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks")," you can now also filter on ",Object(o.b)("inlineCode",{parentName:"p"},"todoItem")," properties."),Object(o.b)("p",null,"In this example we'll find all subTasks that are related to a ",Object(o.b)("inlineCode",{parentName:"p"},"todoItem")," with a title that starts with ",Object(o.b)("inlineCode",{parentName:"p"},"Created"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},'{\n  subTasks(filter: { todoItem: { title: { like: "Create%" } } }) {\n    title\n    completed\n  }\n}\n\n')),Object(o.b)("h2",{id:"unpagedrelation"},"@UnPagedRelation"),Object(o.b)("p",null,"You can also use the ",Object(o.b)("inlineCode",{parentName:"p"},"@UnPagedRelation")," decorator to define a relation that does not use paging and returns an array\nof all the related records."),Object(o.b)("h3",{id:"example-2"},"Example"),Object(o.b)("p",null,"Based on the entity definition above we can define a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemDTO")," with a ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," relation."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, UnPagedRelation } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@UnPagedRelation('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"When specifying a many relation a couple of endpoints will automatically be generated. In this example the following are generated."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"todoItem.subTasks")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"query")," endpoint to retrieve a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItems")," ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks"),".",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," property will accept a ",Object(o.b)("a",{parentName:"li",href:"/nestjs-query/docs/concepts/queries"},"query")," to allow you to filter, and sort results."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," will be returned as an array of results."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"addSubTasksToTodoItem")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"mutation")," to add ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks")," to a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem"),".")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"In this example we ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," because ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks")," cannot exist without a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem"),"."))),Object(o.b)("p",null,"To set up the resolver you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"The generated schema will contain a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem")," type like the following."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    filter: SubTaskFilter = {}\n    sorting: [SubTaskSort!] = []\n  ): [SubTask!]!\n}\n")),Object(o.b)("p",null,"The following mutations will also be automatically exposed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Mutation {\n   addSubTasksToTodoItem(input: RelationsInput!): TodoItem!\n}\n\ninput RelationsInput {\n  id: ID!\n  relationIds: [ID!]!\n}\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(o.b)("inlineCode",{parentName:"p"},"removeSubTasksFromTodoItem")," mutation would also be exposed with the same arguments as ",Object(o.b)("inlineCode",{parentName:"p"},"addSubTasksToTodoItem"),"."))),Object(o.b)("h2",{id:"filterableunpagedrelation"},"@FilterableUnPagedRelation"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation")," extends the ",Object(o.b)("inlineCode",{parentName:"p"},"@UnPagedRelation")," decorator exposing the ability to filter the ",Object(o.b)("inlineCode",{parentName:"p"},"DTO")," that\ndefines the relation by relation properties."),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation")," decorator will ",Object(o.b)("strong",{parentName:"p"},"only")," work with relations defined by the orm used (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"typeorm"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"sequelize"),"). If your relations are federated or you are using ",Object(o.b)("inlineCode",{parentName:"p"},"mongoose")," you cannot use the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation"),"\ndecorator."))),Object(o.b)("h3",{id:"example-3"},"Example"),Object(o.b)("p",null,"In this example we'll use the same Entities defined above to create a graphql endpoint that allows filtering ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems"),"\nby ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.dto.ts" {6}',title:'"sub-task/sub-task.dto.ts"',"{6}":!0},"import { FilterableField, FilterableUnPagedRelation } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@FilterableUnPagedRelation('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n")),Object(o.b)("p",null,"Notice the use of ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"@UnPagedRelation"),", by using the\n",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableUnPagedRelation")," version ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," will allow filtering on the ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," relation."),Object(o.b)("p",null,"The  module definition remains the same."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="sub-task/sub-task.module.ts"',title:'"sub-task/sub-task.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"When querying for ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems")," you can now also filter on ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," properties."),Object(o.b)("p",null,"In this example we'll find all ",Object(o.b)("inlineCode",{parentName:"p"},"todoItems")," that are related to a ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," that are completed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(filter: { subTasks: { completed: { is: true } } }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        description\n        completed\n        subTasks {\n          title\n          description\n          completed\n        }\n      }\n      cursor\n    }\n  }\n}\n")),Object(o.b)("h2",{id:"offsetconnection"},"@OffsetConnection"),Object(o.b)("h3",{id:"example-4"},"Example"),Object(o.b)("p",null,"Based on the entity definitions above we can create a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemDTO")," with a connection to the ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, OffsetConnection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@OffsetConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"When specifying a ",Object(o.b)("inlineCode",{parentName:"p"},"@OffsetConnection")," relation a couple of endpoints will automatically be generated. In this example\nthe following are generated."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"todoItem.subTasks")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"query")," to retrieve a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItems")," ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks"),".",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," property will accept a ",Object(o.b)("a",{parentName:"li",href:"/nestjs-query/docs/concepts/queries"},"query")," to allow you to filter, page and sort results."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," property will return a offset based ",Object(o.b)("a",{parentName:"li",href:"/nestjs-query/docs/graphql/types#connectiontype"},"connection")," to page through\nresults."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"addSubTasksToTodoItem")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"mutation")," to add ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks")," to a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem"),".")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"In this example we ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," because ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks")," cannot exist without a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem"),"."))),Object(o.b)("p",null,"To set up the resolver you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"The generated schema will contain a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem")," type like the following."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: OffsetPaging = { limit: 10 }\n\n    filter: SubTaskFilter = {}\n\n    sorting: [SubTaskSort!] = []\n  ): TodoItemSubTasksConnection!\n}\n")),Object(o.b)("p",null,"The following mutations will also be automatically exposed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Mutation {\n   addSubTasksToTodoItem(input: RelationsInput!): TodoItem!\n}\n\ninput RelationsInput {\n  id: ID!\n  relationIds: [ID!]!\n}\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(o.b)("inlineCode",{parentName:"p"},"removeSubTasksFromTodoItem")," mutation would also be exposed with the same arguments as ",Object(o.b)("inlineCode",{parentName:"p"},"addSubTasksToTodoItem"),"."))),Object(o.b)("h3",{id:"total-count-example"},"Total Count Example"),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Enabling ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," can be expensive. If your table is large the ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," query may be expensive, use with caution."))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field is not eagerly fetched. It will only be executed if the field is queried from the client."))),Object(o.b)("p",null,"When using the ",Object(o.b)("inlineCode",{parentName:"p"},"@OffsetConnection")," decorator you can enable the ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field. The ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field will return the total number of records included in the connection."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, OffsetConnection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@OffsetConnection('subTasks', () => SubTaskDTO, { disableRemove: true, enableTotalCount: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"The generated graphql will include a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemSubTasksConnection")," with a ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql",metastring:"{19}","{19}":!0},"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: OffsetPaging = { limit: 10 }\n\n    filter: SubTaskFilter = {}\n\n    sorting: [SubTaskSort!] = []\n  ): TodoItemSubTasksConnection!\n}\n\ntype TodoItemSubTasksConnection {\n  pageInfo: OffsetPageInfo!\n  nodes: [SubTask!]!\n  totalCount: Int!\n}\n\n")),Object(o.b)("h2",{id:"filterableoffsetconnection"},"@FilterableOffsetConnection"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableOffsetConnection")," extends the ",Object(o.b)("inlineCode",{parentName:"p"},"@OffsetConnection")," decorator exposing the ability to filter the ",Object(o.b)("inlineCode",{parentName:"p"},"DTO"),"\nthat defines the relation by relation properties."),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableOffsetConnection")," decorator will ",Object(o.b)("strong",{parentName:"p"},"only")," work with relations defined by the orm used (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"typeorm"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"sequelize"),"). If your relations are federated or you are using ",Object(o.b)("inlineCode",{parentName:"p"},"mongoose")," you cannot use the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableConnection"),"\ndecorator."))),Object(o.b)("h3",{id:"example-5"},"Example"),Object(o.b)("p",null,"In this example we'll use the same Entities defined above to create a graphql endpoint that allows filtering ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems")," by ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {7}',title:'"todo-item/todo-item.dto.ts"',"{7}":!0},"import { FilterableField, FilterableOffsetConnection, QueryOptions } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@QueryOptions({ pagingStrategy: PagingStrategies.OFFSET })\n@FilterableOffsetConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"Notice the use of ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableOffsetConnection")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"@OffsetConnection"),", by using the\n",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableOffsetConnection")," version ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," will allow filtering on the ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," relation."),Object(o.b)("p",null,"The  module definition remains the same."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'},"import { PagingStrategies } from '@nestjs-query/core';\nimport { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"When querying for ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems")," you can now also filter on ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," properties."),Object(o.b)("p",null,"In this example we'll find all ",Object(o.b)("inlineCode",{parentName:"p"},"todoItems")," that have ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," that are completed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(filter: { subTasks: { completed: { is: true } } }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n    nodes {\n      id\n      title\n      description\n      completed\n      subTasks {\n        nodes {\n          title\n          description\n          completed\n        }\n      }\n    }\n  }\n}\n")),Object(o.b)("h2",{id:"cursorconnection"},"@CursorConnection"),Object(o.b)("h3",{id:"example-6"},"Example"),Object(o.b)("p",null,"Based on the entity definitions above we can create a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemDTO")," with a connection to the ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, CursorConnection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@CursorConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"When specifying a ",Object(o.b)("inlineCode",{parentName:"p"},"@CursorConnection")," relation a couple of endpoints will automatically be generated. In this example\nthe\nfollowing are generated."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"todoItem.subTasks")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"query")," to retrieve a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItems")," ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks"),".",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," property will accept a ",Object(o.b)("a",{parentName:"li",href:"/nestjs-query/docs/concepts/queries"},"query")," to allow you to filter, page and sort results."),Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"subTasks")," property will return a cursor based ",Object(o.b)("a",{parentName:"li",href:"/nestjs-query/docs/graphql/types#connectiontype"},"connection")," to page through\nresults."))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"addSubTasksToTodoItem")," - A ",Object(o.b)("inlineCode",{parentName:"li"},"mutation")," to add ",Object(o.b)("inlineCode",{parentName:"li"},"SubTasks")," to a ",Object(o.b)("inlineCode",{parentName:"li"},"TodoItem"),".")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"In this example we ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," because ",Object(o.b)("inlineCode",{parentName:"p"},"SubTasks")," cannot exist without a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem"),"."))),Object(o.b)("p",null,"To set up the resolver you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"NestjsQueryGraphQLModule"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"The generated schema will contain a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItem")," type like the following."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: CursorPaging = { first: 10 }\n\n    filter: SubTaskFilter = {}\n\n    sorting: [SubTaskSort!] = []\n  ): TodoItemSubTasksConnection!\n}\n")),Object(o.b)("p",null,"The following mutations will also be automatically exposed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"type Mutation {\n   addSubTasksToTodoItem(input: RelationsInput!): TodoItem!\n}\n\ninput RelationsInput {\n  id: ID!\n  relationIds: [ID!]!\n}\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," was set to ",Object(o.b)("inlineCode",{parentName:"p"},"false")," or not specified a ",Object(o.b)("inlineCode",{parentName:"p"},"removeSubTasksFromTodoItem")," mutation would also be exposed with the same arguments as ",Object(o.b)("inlineCode",{parentName:"p"},"addSubTasksToTodoItem"),"."))),Object(o.b)("h3",{id:"total-count-example-1"},"Total Count Example"),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Enabling ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," can be expensive. If your table is large the ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," query may be expensive, use with caution."))),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field is not eagerly fetched. It will only be executed if the field is queried from the client."))),Object(o.b)("p",null,"When using the ",Object(o.b)("inlineCode",{parentName:"p"},"@CursorConnection")," decorator you can enable the ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field. The ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field will return the total number of records included in the connection."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, Connection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@CursorConnection('subTasks', () => SubTaskDTO, { disableRemove: true, enableTotalCount: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"The generated graphql will include a ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemSubTasksConnection")," with a ",Object(o.b)("inlineCode",{parentName:"p"},"totalCount")," field."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql",metastring:"{19}","{19}":!0},"type TodoItem {\n  id: ID!\n  title: String!\n  completed: Boolean!\n  created: DateTime!\n  updated: DateTime!\n  subTasks(\n    paging: CursorPaging = { first: 10 }\n\n    filter: SubTaskFilter = {}\n\n    sorting: [SubTaskSort!] = []\n  ): TodoItemSubTasksConnection!\n}\n\ntype TodoItemSubTasksConnection {\n  pageInfo: PageInfo!\n  edges: [SubTaskEdge!]!\n  totalCount: Int!\n}\n\n")),Object(o.b)("h2",{id:"filterablecursorconnection"},"@FilterableCursorConnection"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableCursorConnection")," extends the ",Object(o.b)("inlineCode",{parentName:"p"},"@CursorConnection")," decorator exposing the ability to filter the ",Object(o.b)("inlineCode",{parentName:"p"},"DTO")," that defines the relation by relation properties."),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableCursorConnection")," decorator will ",Object(o.b)("strong",{parentName:"p"},"only")," work with relations defined by the orm used (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"typeorm"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"sequelize"),"). If your relations are federated or you are using ",Object(o.b)("inlineCode",{parentName:"p"},"mongoose")," you cannot use the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableConnection"),"\ndecorator."))),Object(o.b)("h3",{id:"example-7"},"Example"),Object(o.b)("p",null,"In this example we'll use the same Entities defined above to create a graphql endpoint that allows filtering ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems")," by ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.dto.ts" {6}',title:'"todo-item/todo-item.dto.ts"',"{6}":!0},"import { FilterableField, FilterableCursorConnection } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\nimport { SubTaskDTO } from '../sub-task/sub-task.dto'\n\n@ObjectType('TodoItem')\n@FilterableCursorConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(o.b)("p",null,"Notice the use of ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableCursorConnection")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"@CursorConnection"),", by using the ",Object(o.b)("inlineCode",{parentName:"p"},"@FilterableCursorConnection")," version ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," will allow filtering on the ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," relation."),Object(o.b)("p",null,"The  module definition remains the same."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.module.ts"',title:'"todo-item/todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@nestjs-query/query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@nestjs-query/query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{ DTOClass: TodoItemDTO, EntityClass: TodoItemEntity }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),Object(o.b)("p",null,"When querying for ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItems")," you can now also filter on ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," properties."),Object(o.b)("p",null,"In this example we'll find all ",Object(o.b)("inlineCode",{parentName:"p"},"todoItems")," that have ",Object(o.b)("inlineCode",{parentName:"p"},"subTasks")," that are completed."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems(filter: { subTasks: { completed: { is: true } } }) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        description\n        completed\n        subTasks {\n          edges {\n            node {\n              title\n              description\n              completed\n            }\n          }\n        }\n      }\n      cursor\n    }\n  }\n}\n")),Object(o.b)("h2",{id:"virtual-relations"},"Virtual Relations"),Object(o.b)("p",null,"You may run into a case where you have a ",Object(o.b)("inlineCode",{parentName:"p"},"virtual")," relation that does not exist in the database. ",Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query"),"\nsupports this through the ",Object(o.b)("a",{parentName:"p",href:"/nestjs-query/docs/concepts/services#relationqueryservice"},"RelationQueryService"),"."),Object(o.b)("h2",{id:"options"},"Options"),Object(o.b)("p",null,"The following options can be passed to all relation/connection decorators, to customize\nfunctionality."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"relationName")," - The name of the relation to use when looking up the relation from the ",Object(o.b)("inlineCode",{parentName:"li"},"QueryService")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"nullable")," - Set to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," if the relation is nullable."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"complexity")," - Set to specify relation complexity. For more info see ",Object(o.b)("a",{parentName:"li",href:"https://docs.nestjs.com/graphql/complexity"},"complexity docs")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"disableRead")," -  Set to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," to disable read operations."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"disableUpdate")," -  Set to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," to disable update operations."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"disableRemove")," -  Set to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," to disable remove operations."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"allowFiltering")," - Set to ",Object(o.b)("inlineCode",{parentName:"li"},"true")," to allow filtering on the relation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"guards=[]")," - An array of ",Object(o.b)("a",{parentName:"li",href:"https://docs.nestjs.com/guards"},"guards")," to add to ",Object(o.b)("inlineCode",{parentName:"li"},"update")," and ",Object(o.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"interceptors=[]")," - An array of ",Object(o.b)("a",{parentName:"li",href:"https://docs.nestjs.com/interceptors"},"interceptors")," to add to ",Object(o.b)("inlineCode",{parentName:"li"},"update")," and ",Object(o.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"pipes=[]")," - An array of ",Object(o.b)("a",{parentName:"li",href:"https://docs.nestjs.com/pipes"},"pipes")," to add to ",Object(o.b)("inlineCode",{parentName:"li"},"update")," and ",Object(o.b)("inlineCode",{parentName:"li"},"remove")," endpoints."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"filters=[]")," - An array of ",Object(o.b)("a",{parentName:"li",href:"https://docs.nestjs.com/exception-filters"},"filters")," to add to ",Object(o.b)("inlineCode",{parentName:"li"},"update")," and ",Object(o.b)("inlineCode",{parentName:"li"},"remove")," endpoints.")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},Object(o.b)("inlineCode",{parentName:"p"},"guards"),", ",Object(o.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(o.b)("inlineCode",{parentName:"p"},"interceptors")," and ",Object(o.b)("inlineCode",{parentName:"p"},"filters")," will not work by default with relation endpoints. See ",Object(o.b)("a",{parentName:"p",href:"https://docs.nestjs.com/graphql/tooling#execute-enhancers-at-the-field-resolver-level"},"https://docs.nestjs.com/graphql/tooling#execute-enhancers-at-the-field-resolver-level")))),Object(o.b)("h3",{id:"custom-relation-name"},"Custom Relation Name"),Object(o.b)("p",null,"Sometimes you may want to expose a relation that has a different name when persisted from the graphql property. To do this use the ",Object(o.b)("inlineCode",{parentName:"p"},"relationName")," property."),Object(o.b)(i.a,{defaultValue:"relation",groupId:"relation-type",values:[{label:"Relation",value:"relation"},{label:"CursorConnection",value:"cursor-connection"},{label:"OffsetConnection",value:"offset-connection"},{label:"UnPagedRelation",value:"unpaged-relation"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// expose todoItem as todoItemRelation in graphql\n@Relation('todoItemRelation', () => TodoItemDTO, { relationName: 'todoItem' })\n"))),Object(o.b)(l.a,{value:"cursor-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// expose subTasks as subTaskConnection in graphql\n@CursorConnection('subTaskConnection', () => SubTaskDTO, { relationName: 'subTasks' })\n"))),Object(o.b)(l.a,{value:"offset-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// expose subTasks as subTaskConnection in graphql\n@OffsetConnection('subTaskConnection', () => SubTaskDTO, { relationName: 'subTasks' })\n"))),Object(o.b)(l.a,{value:"unpaged-relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// expose subTasks as subTaskConnection in graphql\n@UnPagedRelation('subTasks', () => SubTaskDTO, { relationName: 'subTasks' })\n")))),Object(o.b)("h3",{id:"disable-reads"},"Disable Reads"),Object(o.b)("p",null,"To disable the ",Object(o.b)("inlineCode",{parentName:"p"},"read")," ",Object(o.b)("inlineCode",{parentName:"p"},"queries")," you can set the ",Object(o.b)("inlineCode",{parentName:"p"},"disableRead")," option to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),"."),Object(o.b)(i.a,{defaultValue:"relation",groupId:"relation-type",values:[{label:"Relation",value:"relation"},{label:"CursorConnection",value:"cursor-connection"},{label:"OffsetConnection",value:"offset-connection"},{label:"UnPagedRelation",value:"unpaged-relation"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable reading the todoItem relation\n@Relation('todoItem', () => TodoItemDTO, { disableRead: true })\n"))),Object(o.b)(l.a,{value:"cursor-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable reading the connection\n@CursorConnection('subTasks', () => SubTaskDTO, { disableRead: true })\n"))),Object(o.b)(l.a,{value:"offset-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable reading the relation\n@OffsetConnection('subTaskConnection', () => SubTaskDTO, { disableRead: true })\n"))),Object(o.b)(l.a,{value:"unpaged-relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable reading the relation\n@UnPagedRelation('subTaskConnection', () => SubTaskDTO, { disableRead: true })\n")))),Object(o.b)("h3",{id:"disable-updates"},"Disable Updates"),Object(o.b)("p",null,"To disable the ",Object(o.b)("inlineCode",{parentName:"p"},"update")," ",Object(o.b)("inlineCode",{parentName:"p"},"mutations")," you can set the ",Object(o.b)("inlineCode",{parentName:"p"},"disableUpdate")," option to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),"."),Object(o.b)(i.a,{defaultValue:"relation",groupId:"relation-type",values:[{label:"Relation",value:"relation"},{label:"CursorConnection",value:"cursor-connection"},{label:"OffsetConnection",value:"offset-connection"},{label:"UnPagedRelation",value:"unpaged-relation"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable updates to the relation\n@Relation('todoItem', () => TodoItemDTO, { disableUpdate: true })\n"))),Object(o.b)(l.a,{value:"cursor-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable updating subTasks\n@CursorConnection('subTasks', () => SubTaskDTO, { disableUpdate: true })\n"))),Object(o.b)(l.a,{value:"offset-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable updating subTasks\n@OffsetConnection('subTasks', () => SubTaskDTO, { disableUpdate: true })\n"))),Object(o.b)(l.a,{value:"unpaged-relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable updating subTasks\n@UnPagedRelation('subTasks', () => SubTaskDTO, { disableUpdate: true })\n")))),Object(o.b)("h3",{id:"disable-removes"},"Disable Removes"),Object(o.b)("p",null,"To disable the ",Object(o.b)("inlineCode",{parentName:"p"},"remove")," ",Object(o.b)("inlineCode",{parentName:"p"},"mutations")," you can set the ",Object(o.b)("inlineCode",{parentName:"p"},"disableRemove")," option to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),"."),Object(o.b)(i.a,{defaultValue:"relation",groupId:"relation-type",values:[{label:"Relation",value:"relation"},{label:"CursorConnection",value:"cursor-connection"},{label:"OffsetConnection",value:"offset-connection"},{label:"UnPagedRelation",value:"unpaged-relation"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable removing the relation\n@Relation('todoItem', () => TodoItemDTO, { disableRemove: true })\n"))),Object(o.b)(l.a,{value:"cursor-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable removing subTasks from the connection\n@CursorConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\n"))),Object(o.b)(l.a,{value:"offset-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable removing subTasks from the connection\n@OffsetConnection('subTasks', () => SubTaskDTO, { disableRemove: true })\n"))),Object(o.b)(l.a,{value:"unpaged-relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// disable removing subTasks from the relations\n@UnPagedRelation('subTasks', () => SubTaskDTO, { disableRemove: true })\n")))),Object(o.b)("h3",{id:"guards-pipes-and-filters"},"Guards, Pipes and Filters"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"NOTE")," ",Object(o.b)("inlineCode",{parentName:"p"},"guards"),", ",Object(o.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(o.b)("inlineCode",{parentName:"p"},"interceptors")," and ",Object(o.b)("inlineCode",{parentName:"p"},"filters")," will not work by default with ",Object(o.b)("inlineCode",{parentName:"p"},"read")," endpoints. See ",Object(o.b)("a",{parentName:"p",href:"https://github.com/nestjs/graphql/issues/295"},"https://github.com/nestjs/graphql/issues/295")),Object(o.b)("p",null,"In this example we'll just demonstrate using a ",Object(o.b)("inlineCode",{parentName:"p"},"guard")," but the same pattern applies for ",Object(o.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(o.b)("inlineCode",{parentName:"p"},"filters")," and\n",Object(o.b)("inlineCode",{parentName:"p"},"interceptors")),Object(o.b)("p",null,"To set up a ",Object(o.b)("a",{parentName:"p",href:"https://docs.nestjs.com/guards"},"guard")," for endpoint you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"guards")," option."),Object(o.b)("p",null,"Assume we have the following auth guard that checks for a certain header and value."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="auth.guard.ts"',title:'"auth.guard.ts"'},"import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AUTH_HEADER_NAME } from './constants';\nimport { config } from './config';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private logger = new Logger(AuthGuard.name);\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const ctx = GqlExecutionContext.create(context);\n    const req = ctx.getContext().request;\n    this.logger.log(`Req = ${req.headers}`);\n    return req.headers[AUTH_HEADER_NAME] === config.auth.header;\n  }\n}\n")),Object(o.b)("p",null,"We can then add it to our relations"),Object(o.b)(i.a,{defaultValue:"relation",groupId:"relation-type",values:[{label:"Relation",value:"relation"},{label:"CursorConnection",value:"cursor-connection"},{label:"OffsetConnection",value:"offset-connection"},{label:"UnPagedRelation",value:"unpaged-relation"}],mdxType:"Tabs"},Object(o.b)(l.a,{value:"relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// Add the AuthGuard using the guards option\n@Relation('todoItem', () => TodoItemDTO, { guards: [AuthGuard] })\n"))),Object(o.b)(l.a,{value:"cursor-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// Add the AuthGuard using the guards option\n@CursorConnection('subTasks', () => SubTaskDTO, { guards: [AuthGuard] })\n"))),Object(o.b)(l.a,{value:"offset-connection",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// Add the AuthGuard using the guards option\n@OffsetConnection('subTasks', () => SubTaskDTO, { guards: [AuthGuard] })\n"))),Object(o.b)(l.a,{value:"unpaged-relation",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"// Add the AuthGuard using the guards option\n@UnPagedRelation('subTasks', () => SubTaskDTO, { guards: [AuthGuard] })\n")))),Object(o.b)("p",null,"Now any requests that go to the ",Object(o.b)("inlineCode",{parentName:"p"},"update")," or ",Object(o.b)("inlineCode",{parentName:"p"},"remove")," endpoints will require the guard."),Object(o.b)("h3",{id:"relation-mixin"},"Relation Mixin"),Object(o.b)("p",null,"If you are using the ",Object(o.b)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/resolvers#individual-resolvers"},"resolvers individually")," you can use the following mixins to\nadd relations functionality."),Object(o.b)("h4",{id:"relatable"},"Relatable"),Object(o.b)("p",null,"When using The ",Object(o.b)("inlineCode",{parentName:"p"},"Relatable")," mixin adds all relations functionality to a resolver."),Object(o.b)("p",null,"In this example we expose on read endpoints for todo items with the relations defined on the ",Object(o.b)("inlineCode",{parentName:"p"},"TodoItemDTO"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item/todo-item.resolver.ts" {12-14}',title:'"todo-item/todo-item.resolver.ts"',"{12-14}":!0},"import { ReadResolver, Relatable } from '@nestjs-query/query-graphql';\nimport { Resolver } from '@nestjs/graphql';\nimport { AuthGuard } from '../auth.guard';\nimport { SubTaskDTO } from '../sub-task/dto/sub-task.dto';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemService } from './todo-item.service';\n\nconst guards = [AuthGuard];\n\n@Resolver(() => TodoItemDTO)\nexport class TodoItemResolver extends Relatable(TodoItemDTO)(ReadResolver(TodoItemDTO)) {\n  constructor(readonly service: TodoItemService) {\n    super(service);\n  }\n}\n")))}p.isMDXComponent=!0},218:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),d=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,u=p["".concat(l,".").concat(m)]||p[m]||c[m]||i;return n?o.a.createElement(u,r(r({ref:t},b),{},{components:n})):o.a.createElement(u,r({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var b=2;b<i;b++)l[b]=n[b];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},219:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},220:function(e,t,n){"use strict";var a=n(0),o=n(221);t.a=function(){const e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},221:function(e,t,n){"use strict";var a=n(0);const o=Object(a.createContext)(void 0);t.a=o},222:function(e,t,n){"use strict";var a=n(0),o=n.n(a),i=n(220),l=n(219),r=n(56),s=n.n(r);const b=37,d=39;t.a=function(e){const{lazy:t,block:n,defaultValue:r,values:p,groupId:c,className:m}=e,{tabGroupChoices:u,setTabGroupChoices:O}=Object(i.a)(),[j,h]=Object(a.useState)(r),N=a.Children.toArray(e.children),g=[];if(null!=c){const e=u[c];null!=e&&e!==j&&p.some((t=>t.value===e))&&h(e)}const T=e=>{const t=e.target,n=g.indexOf(t),a=N[n].props.value;h(a),null!=c&&(O(c,a),setTimeout((()=>{(function(e){const{top:t,left:n,bottom:a,right:o}=e.getBoundingClientRect(),{innerHeight:i,innerWidth:l}=window;return t>=0&&o<=l&&a<=i&&n>=0})(t)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s.a.tabItemActive),setTimeout((()=>t.classList.remove(s.a.tabItemActive)),2e3))}),150))},f=e=>{var t;let n;switch(e.keyCode){case d:{const t=g.indexOf(e.target)+1;n=g[t]||g[0];break}case b:{const t=g.indexOf(e.target)-1;n=g[t]||g[g.length-1];break}}null===(t=n)||void 0===t||t.focus()};return o.a.createElement("div",{className:"tabs-container"},o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},m)},p.map((({value:e,label:t})=>o.a.createElement("li",{role:"tab",tabIndex:j===e?0:-1,"aria-selected":j===e,className:Object(l.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===e}),key:e,ref:e=>g.push(e),onKeyDown:f,onFocus:T,onClick:T},t)))),t?Object(a.cloneElement)(N.filter((e=>e.props.value===j))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},N.map(((e,t)=>Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}},223:function(e,t,n){"use strict";var a=n(0),o=n.n(a);t.a=function({children:e,hidden:t,className:n}){return o.a.createElement("div",{role:"tabpanel",hidden:t,className:n},e)}}}]);