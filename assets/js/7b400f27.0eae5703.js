(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1820],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7631:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],s={title:"Serialization"},c=void 0,l={unversionedId:"persistence/mongoose/serialization",id:"persistence/mongoose/serialization",isDocsHomePage:!1,title:"Serialization",description:"Using class-transformer is a popular libarary used in nestjs, unfortunately class-transformer does not place nicely with mongoose documents.",source:"@site/docs/persistence/mongoose/serialization.md",sourceDirName:"persistence/mongoose",slug:"/persistence/mongoose/serialization",permalink:"/nestjs-query/docs/persistence/mongoose/serialization",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/persistence/mongoose/serialization.md",version:"current",frontMatter:{title:"Serialization"},sidebar:"docs",previous:{title:"Custom Service",permalink:"/nestjs-query/docs/persistence/mongoose/custom-service"},next:{title:"Getting Started",permalink:"/nestjs-query/docs/persistence/typegoose/getting-started"}},u=[],p={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," is a popular libarary used in ",(0,a.kt)("inlineCode",{parentName:"p"},"nestjs"),", unfortunately ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," does not place nicely with ",(0,a.kt)("inlineCode",{parentName:"p"},"mongoose")," documents."),(0,a.kt)("p",null,"For most use cases ",(0,a.kt)("inlineCode",{parentName:"p"},"nestjs-query")," will take care of the serialization for you through ",(0,a.kt)("a",{parentName:"p",href:"/nestjs-query/docs/concepts/advanced/assemblers"},"assemblers"),". If you find yourself in a situation where you want to use ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," with a model you should use the following patterns."),(0,a.kt)("p",null,"To convert your DTO into a model you can inject your Model and create a new instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"new TodoItemModel(todoItemDTO);\n")),(0,a.kt)("p",null,"When converting your entity into a DTO you can use the following."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const dto = plainToClass(TodoItemDTO, todoItemEntity.toObject({ virtuals: true }));\n")))}m.isMDXComponent=!0}}]);