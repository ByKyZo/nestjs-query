(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{176:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return b}));var a=n(3),i=n(7),l=(n(0),n(215)),r=n(219),o=n(220),s={title:"DTOs"},p={unversionedId:"graphql/dtos",id:"graphql/dtos",isDocsHomePage:!1,title:"DTOs",description:"The query-graphql package leverages most decorators from @nestjs/graphql and TypeGraphQL, with the exception of FilterableField.",source:"@site/docs/graphql/dtos.mdx",slug:"/graphql/dtos",permalink:"/nestjs-query/docs/graphql/dtos",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/dtos.mdx",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/nestjs-query/docs/graphql/getting-started"},next:{title:"Resolvers",permalink:"/nestjs-query/docs/graphql/resolvers"}},d=[{value:"<code>@FilterableField</code>",id:"filterablefield",children:[{value:"Options",id:"options",children:[]},{value:"Example",id:"example",children:[]},{value:"Example - allowedComparisons",id:"example---allowedcomparisons",children:[]},{value:"Example - filterRequired",id:"example---filterrequired",children:[]}]},{value:"<code>@QueryOptions</code>",id:"queryoptions",children:[{value:"Setting a default Filter",id:"setting-a-default-filter",children:[]},{value:"Result Page Size",id:"result-page-size",children:[]},{value:"Limiting Results Size",id:"limiting-results-size",children:[]},{value:"Paging Strategy",id:"paging-strategy",children:[]},{value:"Paging with Total Count",id:"paging-with-total-count",children:[]},{value:"Default Sort",id:"default-sort",children:[]},{value:"Allowed Boolean Expressions",id:"allowed-boolean-expressions",children:[]}]}],c={toc:d};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"query-graphql")," package leverages most decorators from ",Object(l.b)("a",{parentName:"p",href:"https://docs.nestjs.com/graphql/quick-start"},Object(l.b)("inlineCode",{parentName:"a"},"@nestjs/graphql"))," and ",Object(l.b)("a",{parentName:"p",href:"https://typegraphql.ml"},"TypeGraphQL"),", with the exception of ",Object(l.b)("inlineCode",{parentName:"p"},"FilterableField"),"."),Object(l.b)("h2",{id:"filterablefield"},Object(l.b)("inlineCode",{parentName:"h2"},"@FilterableField")),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"FilterableField")," is very similar to the ",Object(l.b)("a",{parentName:"p",href:"https://typegraphql.ml/docs/types-and-fields.html"},Object(l.b)("inlineCode",{parentName:"a"},"Field"))," from\nTypeGraphQL, however it allows you to specify the fields that should be filterable when querying."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"If you use the @nestjs/graphql ",Object(l.b)("inlineCode",{parentName:"p"},"Field")," decorator it will not be exposed in the query type for the DTO."))),Object(l.b)("h3",{id:"options"},"Options"),Object(l.b)("p",null,"In addition to the normal field options you can also specify the following options"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"allowedComparisons")," - An array of allowed comparisons. You can use this option to allow a subset of filter comparisons when querying through graphql.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"This option is useful if the field is expensive to query on for certain operators, or your data source supports a limited set of comparisons."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"filterRequired")," - When set to ",Object(l.b)("inlineCode",{parentName:"li"},"true")," the field will be required whenever a ",Object(l.b)("inlineCode",{parentName:"li"},"filter")," is used. The ",Object(l.b)("inlineCode",{parentName:"li"},"filter")," requirement applies to all ",Object(l.b)("inlineCode",{parentName:"li"},"read"),", ",Object(l.b)("inlineCode",{parentName:"li"},"update"),", and ",Object(l.b)("inlineCode",{parentName:"li"},"delete")," endpoints that use a ",Object(l.b)("inlineCode",{parentName:"li"},"filter"),".",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"filterRequired")," option is useful when your entity has an index that requires a subset of fields to be used to provide certain level of query performance."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"NOTE"),": When a field is a required in a filter the default ",Object(l.b)("inlineCode",{parentName:"li"},"filter")," option is ignored.")))),Object(l.b)("h3",{id:"example"},"Example"),Object(l.b)("p",null,"In the following example we allow ",Object(l.b)("inlineCode",{parentName:"p"},"id"),", ",Object(l.b)("inlineCode",{parentName:"p"},"title"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"completed")," to be used in queries."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'},"import { FilterableField } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h3",{id:"example---allowedcomparisons"},"Example - allowedComparisons"),Object(l.b)("p",null,"In the following example the ",Object(l.b)("inlineCode",{parentName:"p"},"allowedComparisons")," option is demonstrated by restricting the comparisons that are allowed when filtering on certain fields."),Object(l.b)("p",null,"For the ",Object(l.b)("inlineCode",{parentName:"p"},"id")," field only ",Object(l.b)("inlineCode",{parentName:"p"},"eq"),", ",Object(l.b)("inlineCode",{parentName:"p"},"neq"),", ",Object(l.b)("inlineCode",{parentName:"p"},"in"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"notIn")," comparisons will be exposed in the schema."),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"title")," field will only allow ",Object(l.b)("inlineCode",{parentName:"p"},"eq"),", ",Object(l.b)("inlineCode",{parentName:"p"},"like"),", and ",Object(l.b)("inlineCode",{parentName:"p"},"notLike"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {6,9}',title:'"todo-item.dto.ts"',"{6,9}":!0},"import { FilterableField } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @FilterableField(() => ID, { allowedComparisons: ['eq', 'neq', 'in', 'notIn'] })\n  id!: string;\n\n  @FilterableField({ allowedComparisons: ['eq', 'like', 'notLike'] })\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h3",{id:"example---filterrequired"},"Example - filterRequired"),Object(l.b)("p",null,"In the following example the ",Object(l.b)("inlineCode",{parentName:"p"},"filterRequired")," option is applied to the ",Object(l.b)("inlineCode",{parentName:"p"},"completed")," field, ensuring that all endpoints that use a filter will require a comparison on the ",Object(l.b)("inlineCode",{parentName:"p"},"completed")," field."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {12}',title:'"todo-item.dto.ts"',"{12}":!0},"import { FilterableField } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField({ filterRequired: true })\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h2",{id:"queryoptions"},Object(l.b)("inlineCode",{parentName:"h2"},"@QueryOptions")),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"@QueryOptions")," decorator can be used to override any defaults for querying functionality such as sorting,\nfiltering, paging strategy, etc."),Object(l.b)("h3",{id:"setting-a-default-filter"},"Setting a default Filter"),Object(l.b)("p",null,"When querying the default ",Object(l.b)("inlineCode",{parentName:"p"},"filter")," is empty. You can specify a default filter by using the ",Object(l.b)("inlineCode",{parentName:"p"},"QueryOptions")," decorator on\nyour DTO option."),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The default filter is only used when a filter is not provided in a query."))),Object(l.b)("p",null,"In this example we specify the default filter to be ",Object(l.b)("inlineCode",{parentName:"p"},"completed IS TRUE"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ defaultFilter: { completed: { is: true } } })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"result-page-size"},"Result Page Size"),Object(l.b)("p",null,"By default all results will be limited to 10 records."),Object(l.b)("p",null,"To override the default you can override the default page size by setting the ",Object(l.b)("inlineCode",{parentName:"p"},"defaultResultSize")," option."),Object(l.b)("p",null,"In this example we specify the ",Object(l.b)("inlineCode",{parentName:"p"},"defaultResultSize")," to 5 which means if a page size is not specified 5 results will be\nreturned."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ defaultResultSize: 5 })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h3",{id:"limiting-results-size"},"Limiting Results Size"),Object(l.b)("p",null,"By default the max number records that can be returned is ",Object(l.b)("inlineCode",{parentName:"p"},"50"),"."),Object(l.b)("p",null,"To override the default you can override the following options specifying the ",Object(l.b)("inlineCode",{parentName:"p"},"maxResultSize")," option."),Object(l.b)("p",null,"In this example we specify limit the max number of records an end user can request to 20."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ maxResultsSize: 20 })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"paging-strategy"},"Paging Strategy"),Object(l.b)("p",null,"By default ",Object(l.b)("inlineCode",{parentName:"p"},"nestjs-query")," uses a ",Object(l.b)("inlineCode",{parentName:"p"},"cursor")," based paging strategy and returns a ",Object(l.b)("a",{parentName:"p",href:"https://relay.dev/graphql/connections.htm"},"connection")," for all query many endpoints."),Object(l.b)("p",null,"For a more in-depth overview of paging check out the ",Object(l.b)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/paging"},"paging docs")),Object(l.b)("p",null,"You can override the default ",Object(l.b)("inlineCode",{parentName:"p"},"pagingStrategy")," to one of the following alternatives"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"OFFSET")," - sets paging to allow ",Object(l.b)("inlineCode",{parentName:"li"},"limit")," and ",Object(l.b)("inlineCode",{parentName:"li"},"offset")," fields, and returns an ",Object(l.b)("inlineCode",{parentName:"li"},"OffsetConnection"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"NONE")," - turn off all paging and always return an ",Object(l.b)("inlineCode",{parentName:"li"},"ArrayConnection"),".")),Object(l.b)("p",null,"When using the ",Object(l.b)("inlineCode",{parentName:"p"},"OFFSET")," strategy your the paging arguments for a many query will accept a ",Object(l.b)("inlineCode",{parentName:"p"},"limit")," and/or ",Object(l.b)("inlineCode",{parentName:"p"},"offset"),".\nThis will also change the return type from a ",Object(l.b)("inlineCode",{parentName:"p"},"CursorConnection")," to an ",Object(l.b)("inlineCode",{parentName:"p"},"OffsetConnection"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ pagingStrategy: PagingStrategies.OFFSET })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("p",null,"To disable paging entirely you can use the ",Object(l.b)("inlineCode",{parentName:"p"},"NONE")," ",Object(l.b)("inlineCode",{parentName:"p"},"pagingStrategy"),". When using ",Object(l.b)("inlineCode",{parentName:"p"},"NONE")," an ",Object(l.b)("inlineCode",{parentName:"p"},"ArrayConnection")," will be returned."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ pagingStrategy: PagingStrategies.NONE })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h3",{id:"paging-with-total-count"},"Paging with Total Count"),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"This section ",Object(l.b)("strong",{parentName:"p"},"ONLY")," applies to ",Object(l.b)("inlineCode",{parentName:"p"},"CURSOR")," and ",Object(l.b)("inlineCode",{parentName:"p"},"OFFSET")," connections."))),Object(l.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"Enabling ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," can be expensive. If your table is large the ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," query may be expensive, use with caution."))),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",{parentName:"div",className:"admonition-heading"},Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",{parentName:"h5",className:"admonition-icon"},Object(l.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(l.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(l.b)("div",{parentName:"div",className:"admonition-content"},Object(l.b)("p",{parentName:"div"},"The ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," field is not eagerly fetched. It will only be executed if the field is queried from the client."))),Object(l.b)("p",null,"When using the ",Object(l.b)("inlineCode",{parentName:"p"},"CURSOR")," (the default) or ",Object(l.b)("inlineCode",{parentName:"p"},"OFFSET")," paging strategy  you have the option to expose a ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," field to\nallow clients to fetch a total count of records in a connection."),Object(l.b)("p",null,"To enable the ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," field for connections set the ",Object(l.b)("inlineCode",{parentName:"p"},"enableTotalCount")," option to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," using the\n",Object(l.b)("inlineCode",{parentName:"p"},"@QueryOptions")," decorator."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ enableTotalCount: true })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("p",null,"When setting ",Object(l.b)("inlineCode",{parentName:"p"},"enableTotalCount")," to ",Object(l.b)("inlineCode",{parentName:"p"},"true")," you will be able to query for ",Object(l.b)("inlineCode",{parentName:"p"},"totalCount")," on ",Object(l.b)("inlineCode",{parentName:"p"},"cursor")," or offset connections"),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"{\n  todoItems {\n    totalCount\n    pageInfo{\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title\n        description\n      }\n    }\n  }\n}\n\n"))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "todoItems": {\n      "totalCount": 5,\n      "pageInfo": {\n        "hasNextPage": false,\n        "hasPreviousPage": false,\n        "startCursor": "YXJyYXljb25uZWN0aW9uOjA=",\n        "endCursor": "YXJyYXljb25uZWN0aW9uOjQ="\n      },\n      "edges": [\n        {\n          "node": {\n            "id": "1",\n            "title": "Create Nest App",\n            "description": null\n          }\n        },\n        {\n          "node": {\n            "id": "2",\n            "title": "Create Entity",\n            "description": null\n          }\n        },\n        {\n          "node": {\n            "id": "3",\n            "title": "Create Entity Service",\n            "description": null\n          }\n        },\n        {\n          "node": {\n            "id": "4",\n            "title": "Add Todo Item Resolver",\n            "description": null\n          }\n        },\n        {\n          "node": {\n            "id": "5",\n            "title": "How to create item With Sub Tasks",\n            "description": null\n          }\n        }\n      ]\n    }\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"default-sort"},"Default Sort"),Object(l.b)("p",null,"When querying the default sort is based on the persistence layer. You can override the default by providing the ",Object(l.b)("inlineCode",{parentName:"p"},"defaultSort")," option."),Object(l.b)("p",null,"In this example we specify the default sort to be by ",Object(l.b)("inlineCode",{parentName:"p"},"title"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ defaultSort: [{ field: 'title', direction: SortDirection.ASC }] })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("h3",{id:"allowed-boolean-expressions"},"Allowed Boolean Expressions"),Object(l.b)("p",null,"When filtering you can provide ",Object(l.b)("inlineCode",{parentName:"p"},"and")," and ",Object(l.b)("inlineCode",{parentName:"p"},"or")," expressions to provide advanced filtering. You can turn off either by\nusing the ",Object(l.b)("inlineCode",{parentName:"p"},"allowedBooleanExpressions")," option."),Object(l.b)("p",null,"In this example we will only allow ",Object(l.b)("inlineCode",{parentName:"p"},"and")," expressions."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5}',title:'"todo-item.dto.ts"',"{5}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ allowedBooleanExpressions: ['and'] })\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("p",null,"To turn off all boolean expressions you can set ",Object(l.b)("inlineCode",{parentName:"p"},"allowedBooleanExpressions")," to an empty array. This is useful if you\nonly allow filtering on certain fields and you want to disable all complex filtering."),Object(l.b)("p",null,"In this example we will only allow ",Object(l.b)("inlineCode",{parentName:"p"},"eq")," comparisons on the id field and disable all ",Object(l.b)("inlineCode",{parentName:"p"},"and"),"/",Object(l.b)("inlineCode",{parentName:"p"},"or")," boolean expressions."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts" {5,7}',title:'"todo-item.dto.ts"',"{5,7}":!0},"import { FilterableField, QueryOptions, PagingStrategies } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({ allowedBooleanExpressions: ['and'] })\nexport class TodoItemDTO {\n  @FilterableField(() => ID, { allowedComparisons: ['eq'] })\n  id!: string;\n\n  @Field()\n  title!: string;\n\n  @Field()\n  completed!: boolean;\n\n  @Field(() => GraphQLISODateTime)\n  created!: Date;\n\n  @Field(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")))}b.isMDXComponent=!0},215:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),d=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,u=c["".concat(r,".").concat(m)]||c[m]||b[m]||l;return n?i.a.createElement(u,o(o({ref:t},p),{},{components:n})):i.a.createElement(u,o({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},216:function(e,t,n){"use strict";function a(e){var t,n,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(i&&(i+=" "),i+=n);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,n=0,i="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(i&&(i+=" "),i+=t);return i}},217:function(e,t,n){"use strict";var a=n(0),i=n(218);t.a=function(){const e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},218:function(e,t,n){"use strict";var a=n(0);const i=Object(a.createContext)(void 0);t.a=i},219:function(e,t,n){"use strict";var a=n(0),i=n.n(a),l=n(217),r=n(216),o=n(55),s=n.n(o);const p=37,d=39;t.a=function(e){const{lazy:t,block:n,defaultValue:o,values:c,groupId:b,className:m}=e,{tabGroupChoices:u,setTabGroupChoices:O}=Object(l.a)(),[h,g]=Object(a.useState)(o),j=a.Children.toArray(e.children);if(null!=b){const e=u[b];null!=e&&e!==h&&c.some((t=>t.value===e))&&g(e)}const f=e=>{g(e),null!=b&&O(b,e)},y=[];return i.a.createElement("div",{className:"tabs-container"},i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":n},m)},c.map((({value:e,label:t})=>i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===e,className:Object(r.a)("tabs__item",s.a.tabItem,{"tabs__item--active":h===e}),key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case d:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case p:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e)},onFocus:()=>f(e),onClick:()=>{f(e)}},t)))),t?Object(a.cloneElement)(j.filter((e=>e.props.value===h))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},j.map(((e,t)=>Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==h})))))}},220:function(e,t,n){"use strict";var a=n(0),i=n.n(a);t.a=function({children:e,hidden:t,className:n}){return i.a.createElement("div",{role:"tabpanel",hidden:t,className:n},e)}}}]);