(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{202:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),l=(n(0),n(216)),r=n(220),o=n(221);const p={title:"Mutations"},i={unversionedId:"graphql/mutations",id:"graphql/mutations",isDocsHomePage:!1,title:"Mutations",description:"The CRUDResolver automatically exposes six mutation endpoints. The endpoints names will be derived",source:"@site/docs/graphql/mutations.mdx",slug:"/graphql/mutations",permalink:"/nestjs-query/docs/graphql/mutations",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/mutations.mdx",version:"current",sidebar:"docs",previous:{title:"Queries",permalink:"/nestjs-query/docs/graphql/queries"},next:{title:"Paging",permalink:"/nestjs-query/docs/graphql/paging"}},c=[{value:"Create One",id:"create-one",children:[]},{value:"Create Many",id:"create-many",children:[]},{value:"Update One",id:"update-one",children:[]},{value:"Update Many",id:"update-many",children:[]},{value:"Delete One",id:"delete-one",children:[]},{value:"Delete Many",id:"delete-many",children:[]}],b={toc:c};function d({components:e,...t}){return Object(l.b)("wrapper",Object(a.a)({},b,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The ",Object(l.b)("a",{parentName:"p",href:"/nestjs-query/docs/graphql/resolvers"},"CRUDResolver")," automatically exposes six mutation endpoints. The endpoints names will be derived\nfrom name provided to ",Object(l.b)("inlineCode",{parentName:"p"},"@ObjectType")," or the class name."),Object(l.b)("p",null,"The following examples are based on the following ",Object(l.b)("inlineCode",{parentName:"p"},"TodoItemDTO")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'},"import { FilterableField } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n\n")),Object(l.b)("p",null,"In the following examples you will see the following endpoints referenced"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"createOneTodoItem")," - graphql endpoint to create a single record.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"createManyTodoItems")," - graphql endpoint to create multiple records,")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"updateOneTodoItem")," - graphql endpoint to update a single record by id.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"updateManyTodoItems")," - graphql endpoint update multiple records with a filter,")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"deleteOneTodoItem")," - graphql endpoint to delete one record by id.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},Object(l.b)("inlineCode",{parentName:"p"},"deleteManyTodoItems")," - graphql endpoint to delete multiple records with a filter."))),Object(l.b)("h3",{id:"create-one"},"Create One"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will by default expose a ",Object(l.b)("inlineCode",{parentName:"p"},"createOne")," mutation using the name of the DTO to name the mutation."),Object(l.b)("p",null,"In this example we create a single ",Object(l.b)("inlineCode",{parentName:"p"},"TodoItem"),", the input by default will be a ",Object(l.b)("inlineCode",{parentName:"p"},"Partial")," of the DTO."),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createOneTodoItem(\n    input: { todoItem: { title: "Create One Todo Item", completed: false } }\n  ) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n'))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createOneTodoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": false,\n      "created": "2020-01-14T09:01:35.834Z",\n      "updated": "2020-01-14T09:01:35.834Z"\n    }\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"create-many"},"Create Many"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will by default expose a ",Object(l.b)("inlineCode",{parentName:"p"},"createMany")," mutation using the name of the DTO to name the mutation."),Object(l.b)("p",null,"In this example we create multiple ",Object(l.b)("inlineCode",{parentName:"p"},"TodoItems"),", the each record is a ",Object(l.b)("inlineCode",{parentName:"p"},"Partial")," of the DTO."),Object(l.b)("h4",{id:"examples"},"Examples"),Object(l.b)("p",null,"The following example creates two ",Object(l.b)("inlineCode",{parentName:"p"},"TodoItems"),"."),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  createManyTodoItems(\n    input: {\n      todoItems: [\n        { title: "Create Many Todo Items - 1", completed: false }\n        { title: "Create Many Todo Items - 2", completed: true }\n      ]\n    }\n  ) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n'))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createManyTodoItems": [\n      {\n        "id": "2",\n        "title": "Create Many Todo Items - 1",\n        "completed": false,\n        "created": "2020-01-14T09:01:55.110Z",\n        "updated": "2020-01-14T09:01:55.110Z"\n      },\n      {\n        "id": "3",\n        "title": "Create Many Todo Items - 2",\n        "completed": true,\n        "created": "2020-01-14T09:01:55.110Z",\n        "updated": "2020-01-14T09:01:55.110Z"\n      }\n    ]\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"update-one"},"Update One"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will by default expose an ",Object(l.b)("inlineCode",{parentName:"p"},"updateOne")," mutation that takes two fields:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"id"),": The id of the record to update."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"update"),": The values to update on the record. This is a partial so you only have to pass in the values you want to\nchange.")),Object(l.b)("h4",{id:"examples-1"},"Examples"),Object(l.b)("p",null,"The following example updates the record with ",Object(l.b)("inlineCode",{parentName:"p"},"id")," equal to ",Object(l.b)("inlineCode",{parentName:"p"},"1")," to ",Object(l.b)("inlineCode",{parentName:"p"},"completed=true")),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  updateOneTodoItem(input: { id: 1, update: { completed: true } }) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateOneTodoItem": {\n      "id": "1",\n      "title": "Create One Todo Item",\n      "completed": true,\n      "created": "2020-01-14T07:00:31.763Z",\n      "updated": "2020-01-14T09:02:28.167Z"\n    }\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"update-many"},"Update Many"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will by default expose an ",Object(l.b)("inlineCode",{parentName:"p"},"updateMany")," mutation that takes two fields:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"filter"),": The filter to use to find the records to update.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"NOTE")," The filter ",Object(l.b)("strong",{parentName:"li"},"CANNOT")," be an empty object. This prevents accidental updating of all records."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"update"),": The values to update on the record. This is a partial so you only have to pass in the values you want to\nchange.")),Object(l.b)("p",null,"The response contains the number of records updated."),Object(l.b)("h4",{id:"examples-2"},"Examples"),Object(l.b)("p",null,"The following example updates records with an ",Object(l.b)("inlineCode",{parentName:"p"},"id")," equal to 1 or 2 to ",Object(l.b)("inlineCode",{parentName:"p"},"completed=true"),"."),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  updateManyTodoItems(\n    input: { filter: { id: { in: [1, 2] } }, update: { completed: true } }\n  ) {\n    updatedCount\n  }\n}\n"))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "updateManyTodoItems": {\n      "updatedCount": 2\n    }\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"delete-one"},"Delete One"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"CRUDResolver")," will by default expose a ",Object(l.b)("inlineCode",{parentName:"p"},"deleteOne")," mutation that allows you to delete a record by id:"),Object(l.b)("h4",{id:"examples-3"},"Examples"),Object(l.b)("p",null,"The following example deletes the record with an id equal to 1."),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"mutation {\n  deleteOneTodoItem(input: { id: 1 }) {\n    id\n    title\n    completed\n    created\n    updated\n  }\n}\n"))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "deleteOneTodoItem": {\n      "title": "Create One Todo Item",\n      "completed": true,\n      "created": "2020-01-14T07:00:31.763Z",\n      "updated": "2020-01-14T09:02:51.429Z"\n    }\n  }\n}\n')))),Object(l.b)("hr",null),Object(l.b)("h3",{id:"delete-many"},"Delete Many"),Object(l.b)("p",null,"The CRUDResolver will by default expose a ",Object(l.b)("inlineCode",{parentName:"p"},"deleteMany")," mutation that takes a ",Object(l.b)("inlineCode",{parentName:"p"},"filter"),":"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"NOTE")," The filter ",Object(l.b)("strong",{parentName:"p"},"CANNOT")," be an empty object. This prevents accidental deletion of all records."),Object(l.b)("h4",{id:"examples-4"},"Examples"),Object(l.b)("p",null,"The following example deletes all records that start with ",Object(l.b)("inlineCode",{parentName:"p"},"Create Many Todo Items"),"."),Object(l.b)(r.a,{defaultValue:"graphql",values:[{label:"GraphQL",value:"graphql"},{label:"Response",value:"response"}],mdxType:"Tabs"},Object(l.b)(o.a,{value:"graphql",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},'mutation {\n  deleteManyTodoItems(\n    input: { filter: { title: { like: "Create Many Todo Items%" } } }\n  ) {\n    deletedCount\n  }\n}\n'))),Object(l.b)(o.a,{value:"response",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "deleteManyTodoItems": {\n      "deletedCount": 6\n    }\n  }\n}\n')))))}d.isMDXComponent=!0},216:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),l=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=l.a.createContext({}),b=function(e){var t=l.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},d=function(e){var t=b(e.components);return l.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},u=l.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,m=d["".concat(o,".").concat(u)]||d[u]||s[u]||r;return n?l.a.createElement(m,p(p({ref:t},c),{},{components:n})):l.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<r;c++)o[c]=n[c];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},217:function(e,t,n){"use strict";function a(e){var t,n,l="";if("string"==typeof e||"number"==typeof e)l+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(l&&(l+=" "),l+=n);else for(t in e)e[t]&&(l&&(l+=" "),l+=t);return l}t.a=function(){for(var e,t,n=0,l="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(l&&(l+=" "),l+=t);return l}},218:function(e,t,n){"use strict";var a=n(0),l=n(219);t.a=function(){const e=Object(a.useContext)(l.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},219:function(e,t,n){"use strict";var a=n(0);const l=Object(a.createContext)(void 0);t.a=l},220:function(e,t,n){"use strict";var a=n(0),l=n.n(a),r=n(218),o=n(217),p=n(55),i=n.n(p);const c=37,b=39;t.a=function(e){const{lazy:t,block:n,defaultValue:p,values:d,groupId:s,className:u}=e,{tabGroupChoices:m,setTabGroupChoices:O}=Object(r.a)(),[j,h]=Object(a.useState)(p),f=a.Children.toArray(e.children);if(null!=s){const e=m[s];null!=e&&e!==j&&d.some((t=>t.value===e))&&h(e)}const T=e=>{h(e),null!=s&&O(s,e)},y=[];return l.a.createElement("div",{className:"tabs-container"},l.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},u)},d.map((({value:e,label:t})=>l.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===e,className:Object(o.a)("tabs__item",i.a.tabItem,{"tabs__item--active":j===e}),key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case b:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case c:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e)},onFocus:()=>T(e),onClick:()=>{T(e)}},t)))),t?Object(a.cloneElement)(f.filter((e=>e.props.value===j))[0],{className:"margin-vert--md"}):l.a.createElement("div",{className:"margin-vert--md"},f.map(((e,t)=>Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}},221:function(e,t,n){"use strict";var a=n(0),l=n.n(a);t.a=function({children:e,hidden:t,className:n}){return l.a.createElement("div",{role:"tabpanel",hidden:t,className:n},e)}}}]);