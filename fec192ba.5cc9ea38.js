(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{226:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(2),r=n(6),o=(n(0),n(231)),i={title:"Hooks"},c={id:"graphql/hooks",isDocsHomePage:!1,title:"Hooks",description:"nestjs-query provides the following hooks that allow you to modify incoming requests.",source:"@site/docs/graphql/hooks.mdx",permalink:"/nestjs-query/docs/graphql/hooks",editUrl:"https://github.com/doug-martin/nestjs-query/edit/master/documentation/docs/graphql/hooks.mdx",sidebar:"docs",previous:{title:"Mutations",permalink:"/nestjs-query/docs/graphql/mutations"},next:{title:"Aggregations",permalink:"/nestjs-query/docs/graphql/aggregations"}},l=[{value:"Usage",id:"usage",children:[{value:"@BeforeCreateOne",id:"beforecreateone",children:[]},{value:"@BeforeCreateMany",id:"beforecreatemany",children:[]},{value:"@BeforeUpdateOne",id:"beforeupdateone",children:[]},{value:"@BeforeUpdateMany",id:"beforeupdatemany",children:[]}]}],p={rightToc:l};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"nestjs-query")," provides the following hooks that allow you to modify incoming requests."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeCreateOne")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"createOne")," mutation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeCreateMany")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"createMany")," mutation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeUpdateOne")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"updateOne")," mutation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeUpdateMany")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"updateMany")," mutation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeDeleteOne")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"deleteOne")," mutation."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"@BeforeDeleteMany")," - invoked before any ",Object(o.b)("inlineCode",{parentName:"li"},"deleteMany")," mutation.")),Object(o.b)("p",null,"Each hook is low touch implementation intended to allow modifying incoming requests. The are not\nintended to replace ",Object(o.b)("inlineCode",{parentName:"p"},"pipes"),", ",Object(o.b)("inlineCode",{parentName:"p"},"guards")," or ",Object(o.b)("inlineCode",{parentName:"p"},"interceptors"),"."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"In order to use a hook you only need to decorate your DTO with the corresponding decorator."),Object(o.b)("p",null,"Each hook expects a function that accepts two arguments the corresponding input and the graphql context."),Object(o.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"The graphql context by default only contains the incoming request!"))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"If you provide a custom ",Object(o.b)("inlineCode",{parentName:"p"},"create")," or ",Object(o.b)("inlineCode",{parentName:"p"},"update")," DTO you can also decorate those classes with corresponding decorators."))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"All of the examples reference a GqlContext. This was defined for the sake of the example. It is recommended that you\ndefine a custom type that represents the information in the context based on the guards and interceptors used in your\napplication."),Object(o.b)("p",{parentName:"div"},"We have defined our ",Object(o.b)("inlineCode",{parentName:"p"},"GqlContext")," as"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts"}),"export type GqlContext = { req: { headers: Record<string, string> } };\n")))),Object(o.b)("h3",{id:"beforecreateone"},"@BeforeCreateOne"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@BeforeCreateOne")," decorator can be used to modify incoming ",Object(o.b)("inlineCode",{parentName:"p"},"createOne")," mutations with information from the graphql\ncontext."),Object(o.b)("p",null,"In this example we set the createdBy field based on the context."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:"{7-10}","{7-10}":!0}),"import { FilterableField, BeforeCreateOne, CreateOneInputType } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\nimport { GqlContext } from '../../interfaces';\nimport { getUserName } from '../../helpers';\n\n@ObjectType('TodoItem')\n@BeforeCreateOne((input: CreateOneInputType<TodoItemDTO>, context: GqlContext) => {\n  input.input.createdBy = getUserName(context);\n  return input;\n})\nexport class TodoItemDTO {\n\n /**\n Other fields\n **/\n\n  @FilterableField({ nullable: true })\n  createdBy?: string;\n\n  @FilterableField({ nullable: true })\n  updatedBy?: string;\n}\n\n")),Object(o.b)("h3",{id:"beforecreatemany"},"@BeforeCreateMany"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@BeforeCreateMany")," decorator can be used to modify incoming ",Object(o.b)("inlineCode",{parentName:"p"},"createMany")," mutations with information from the\ngraphql context."),Object(o.b)("p",null,"In this example we set the createdBy field on each record based on the context."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:"{7-11}","{7-11}":!0}),"import { FilterableField, BeforeCreateMany, CreateManyInputType } from '@nestjs-query/query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\nimport { GqlContext } from '../../interfaces';\nimport { getUserName } from '../../helpers';\n\n@ObjectType('TodoItem')\n@BeforeCreateMany((input: CreateManyInputType<TodoItemDTO>, context: GqlContext) => {\n  const createdBy = getUserName(context);\n  input.input = input.input.map((c) => ({ ...c, createdBy }));\n  return input;\n})\nexport class TodoItemDTO {\n\n   /**\n   Other fields\n   **/\n\n  @FilterableField({ nullable: true })\n  createdBy?: string;\n\n  @FilterableField({ nullable: true })\n  updatedBy?: string;\n}\n\n")),Object(o.b)("h3",{id:"beforeupdateone"},"@BeforeUpdateOne"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@BeforeUpdateOne")," decorator can be used to modify incoming ",Object(o.b)("inlineCode",{parentName:"p"},"updateOne")," mutations with information from the graphql\ncontext."),Object(o.b)("p",null,"In this example we set the updatedBy field in the update."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:"{7-10}","{7-10}":!0}),"import { FilterableField, BeforeUpdateOne, UpdateOneInputType } from '@nestjs-query/query-graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { GqlContext } from '../../interfaces';\nimport { getUserName } from '../../helpers';\n\n@ObjectType('TodoItem')\n@BeforeUpdateOne((input: UpdateOneInputType<TodoItemDTO>, context: GqlContext) => {\n  input.update.updatedBy = getUserName(context);\n  return input;\n})\nexport class TodoItemDTO {\n\n  /**\n  Other fields\n  **/\n\n  @FilterableField({ nullable: true })\n  createdBy?: string;\n\n  @FilterableField({ nullable: true })\n  updatedBy?: string;\n}\n\n")),Object(o.b)("h3",{id:"beforeupdatemany"},"@BeforeUpdateMany"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@BeforeUpdateMany")," decorator can be used to modify incoming ",Object(o.b)("inlineCode",{parentName:"p"},"updateMany")," mutations with information from the\ngraphql context."),Object(o.b)("p",null,"In this example we set the updatedBy field in the update."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ts",metastring:"{7-10}","{7-10}":!0}),"import { FilterableField, BeforeUpdateMany, UpdateManyInputType } from '@nestjs-query/query-graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { GqlContext } from '../../interfaces';\nimport { getUserName } from '../../helpers';\n\n@ObjectType('TodoItem')\n@BeforeUpdateMany((input: UpdateManyInputType<TodoItemDTO, TodoItemDTO>, context: GqlContext) => {\n  input.update.updatedBy = getUserName(context);\n  return input;\n})\nexport class TodoItemDTO {\n\n  /**\n  Other fields\n  **/\n\n  @FilterableField({ nullable: true })\n  createdBy?: string;\n\n  @FilterableField({ nullable: true })\n  updatedBy?: string;\n}\n\n")))}d.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),d=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=d(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=d(n),m=a,u=b["".concat(i,".").concat(m)]||b[m]||s[m]||o;return n?r.a.createElement(u,c(c({ref:t},p),{},{components:n})):r.a.createElement(u,c({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);